using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace WCFArchitect.Compiler.Generators
{
	internal static class ProjectCSGenerator
	{
		public static bool VerifyCode(Projects.Project o)
		{
			bool NoErrors = true;

			if ((o.ServerOutputFile == "" || o.ServerOutputFile == null))
			{
				Compiler.Program.AddMessage(new WCFArchitect.Compiler.CompileMessage("GS0003", "The '" + o.Name + "' project does not have a Server Assembly Name. You must specify a Server Assembly Name.", WCFArchitect.Compiler.CompileMessageSeverity.ERROR, null, o, o.GetType(), Guid.Empty, o.ID));
				NoErrors = false;
			}
			else
				if (Helpers.RegExs.MatchFileName.IsMatch(o.ServerOutputFile) == false)
				{
					Compiler.Program.AddMessage(new WCFArchitect.Compiler.CompileMessage("GS0004", "The Server Assembly Name in '" + o.Name + "' project is not set or contains invalid characters. You must specify a valid Windows file name.", WCFArchitect.Compiler.CompileMessageSeverity.ERROR, null, o, o.GetType(), Guid.Empty, o.ID));
					NoErrors = false;
				}
			if ((o.ClientOutputFile == "" || o.ClientOutputFile == null))
			{
				Compiler.Program.AddMessage(new WCFArchitect.Compiler.CompileMessage("GS0005", "The '" + o.Name + "' project does not have a Client Assembly Name. You must specify a Client Assembly Name.", WCFArchitect.Compiler.CompileMessageSeverity.ERROR, null, o, o.GetType(), Guid.Empty, o.ID));
				NoErrors = false;
			}
			else
				if (Helpers.RegExs.MatchFileName.IsMatch(o.ClientOutputFile) == false)
				{
					Compiler.Program.AddMessage(new WCFArchitect.Compiler.CompileMessage("GS0006", "The Client Assembly Name in '" + o.Name + "' project is not set or contains invalid characters. You must specify a valid Windows file name.", WCFArchitect.Compiler.CompileMessageSeverity.ERROR, null, o, o.GetType(), Guid.Empty, o.ID));
					NoErrors = false;
				}
			if ((o.ServerOutputFile == o.ClientOutputFile))
			{
				Compiler.Program.AddMessage(new WCFArchitect.Compiler.CompileMessage("GS0007", "The '" + o.Name + "' project Client and Server Assembly Names are the same. You must specify a different Server or Client Assembly Name.", WCFArchitect.Compiler.CompileMessageSeverity.ERROR, null, o, o.GetType(), Guid.Empty, o.ID));
				NoErrors = false;
			}

			return NoErrors;
		}


		public static string GenerateServerCode30(Projects.Project o)
		{
			StringBuilder Code = new StringBuilder();
			Code.AppendLine("//---------------------------------------------------------------------------");
			Code.AppendLine("// This code was generated by a tool. Changes to this file may cause ");
			Code.AppendLine("// incorrect behavior and will be lost if the code is regenerated.");
			Code.AppendLine("//");
			Code.AppendFormat("// WCF Architect Version:\t{0}{1}", Globals.ApplicationVersion.ToString(), Environment.NewLine);
			Code.AppendLine("// .NET Framework Version:\t3.0");
			Code.AppendLine("//---------------------------------------------------------------------------");
			Code.AppendLine();
			foreach (Projects.ProjectUsingNamespace PUN in o.UsingNamespaces)
				if (PUN.Server == true) Code.AppendFormat("using {0};{1}", PUN.Namespace, Environment.NewLine);
			Code.AppendLine();

			Code.AppendLine(NamespaceCSGenerator.GenerateServerCode30(o.Namespace));
			Code.AppendLine();

			return Code.ToString();
		}

		public static string GenerateServerCode35(Projects.Project o)
		{
			StringBuilder Code = new StringBuilder();
			Code.AppendLine("//---------------------------------------------------------------------------");
			Code.AppendLine("// This code was generated by a tool. Changes to this file may cause ");
			Code.AppendLine("// incorrect behavior and will be lost if the code is regenerated.");
			Code.AppendLine("//");
			Code.AppendFormat("// WCF Architect Version:\t{0}{1}", Globals.ApplicationVersion.ToString(), Environment.NewLine);
			Code.AppendLine("// .NET Framework Version:\t3.5");
			Code.AppendLine("//---------------------------------------------------------------------------");
			Code.AppendLine();
			foreach (Projects.ProjectUsingNamespace PUN in o.UsingNamespaces)
				if (PUN.Server == true) Code.AppendFormat("using {0};{1}", PUN.Namespace, Environment.NewLine);
			Code.AppendLine();

			Code.AppendLine(NamespaceCSGenerator.GenerateServerCode35(o.Namespace));
			Code.AppendLine();

			return Code.ToString();
		}

		public static string GenerateServerCode35Client(Projects.Project o)
		{
			StringBuilder Code = new StringBuilder();
			Code.AppendLine("//---------------------------------------------------------------------------");
			Code.AppendLine("// This code was generated by a tool. Changes to this file may cause ");
			Code.AppendLine("// incorrect behavior and will be lost if the code is regenerated.");
			Code.AppendLine("//");
			Code.AppendFormat("// WCF Architect Version:\t{0}{1}", Globals.ApplicationVersion.ToString(), Environment.NewLine);
			Code.AppendLine("// .NET Framework Version:\t3.5 (Client)");
			Code.AppendLine("//---------------------------------------------------------------------------");
			Code.AppendLine();
			foreach (Projects.ProjectUsingNamespace PUN in o.UsingNamespaces)
				if (PUN.IsFullFrameworkOnly == false)
					if (PUN.Server == true) Code.AppendFormat("using {0};{1}", PUN.Namespace, Environment.NewLine);
			Code.AppendLine();

			Code.AppendLine(NamespaceCSGenerator.GenerateServerCode35(o.Namespace));
			Code.AppendLine();

			return Code.ToString();
		}

		public static string GenerateServerCode40(Projects.Project o)
		{
			StringBuilder Code = new StringBuilder();
			Code.AppendLine("//---------------------------------------------------------------------------");
			Code.AppendLine("// This code was generated by a tool. Changes to this file may cause ");
			Code.AppendLine("// incorrect behavior and will be lost if the code is regenerated.");
			Code.AppendLine("//");
			Code.AppendFormat("// WCF Architect Version:\t{0}{1}", Globals.ApplicationVersion.ToString(), Environment.NewLine);
			Code.AppendLine("// .NET Framework Version:\t4.0");
			Code.AppendLine("//---------------------------------------------------------------------------");
			Code.AppendLine();
			foreach (Projects.ProjectUsingNamespace PUN in o.UsingNamespaces)
				if (PUN.Server == true) Code.AppendFormat("using {0};{1}", PUN.Namespace, Environment.NewLine);
			Code.AppendLine();

			Code.AppendLine(NamespaceCSGenerator.GenerateServerCode40(o.Namespace));
			Code.AppendLine();

			return Code.ToString();
		}

		public static string GenerateServerCode40Client(Projects.Project o)
		{
			StringBuilder Code = new StringBuilder();
			Code.AppendLine("//---------------------------------------------------------------------------");
			Code.AppendLine("// This code was generated by a tool. Changes to this file may cause ");
			Code.AppendLine("// incorrect behavior and will be lost if the code is regenerated.");
			Code.AppendLine("//");
			Code.AppendFormat("// WCF Architect Version:\t{0}{1}", Globals.ApplicationVersion.ToString(), Environment.NewLine);
			Code.AppendLine("// .NET Framework Version:\t4.0 (Client)");
			Code.AppendLine("//---------------------------------------------------------------------------");
			Code.AppendLine();
			foreach (Projects.ProjectUsingNamespace PUN in o.UsingNamespaces)
				if (PUN.IsFullFrameworkOnly == false)
					if (PUN.Server == true) Code.AppendFormat("using {0};{1}", PUN.Namespace, Environment.NewLine);
			Code.AppendLine();
			Code.AppendLine(NamespaceCSGenerator.GenerateServerCode40(o.Namespace));
			Code.AppendLine();
			return Code.ToString();
		}

		public static string GenerateServerCode45(Projects.Project o)
		{
			StringBuilder Code = new StringBuilder();
			Code.AppendLine("//---------------------------------------------------------------------------");
			Code.AppendLine("// This code was generated by a tool. Changes to this file may cause ");
			Code.AppendLine("// incorrect behavior and will be lost if the code is regenerated.");
			Code.AppendLine("//");
			Code.AppendFormat("// WCF Architect Version:\t{0}{1}", Globals.ApplicationVersion.ToString(), Environment.NewLine);
			Code.AppendLine("// .NET Framework Version:\t4.0");
			Code.AppendLine("//---------------------------------------------------------------------------");
			Code.AppendLine();
			foreach (Projects.ProjectUsingNamespace PUN in o.UsingNamespaces)
				if (PUN.Server == true) Code.AppendFormat("using {0};{1}", PUN.Namespace, Environment.NewLine);
			Code.AppendLine();

			Code.AppendLine(NamespaceCSGenerator.GenerateServerCode45(o.Namespace));
			Code.AppendLine();

			return Code.ToString();
		}

		public static string GenerateClientCode30(Projects.Project o)
		{
			StringBuilder Code = new StringBuilder();
			Code.AppendLine("//---------------------------------------------------------------------------");
			Code.AppendLine("// This code was generated by a tool. Changes to this file may cause ");
			Code.AppendLine("// incorrect behavior and will be lost if the code is regenerated.");
			Code.AppendLine("//");
			Code.AppendFormat("// WCF Architect Version:\t{0}{1}", Globals.ApplicationVersion.ToString(), Environment.NewLine);
			Code.AppendLine("// .NET Framework Version:\t3.0");
			Code.AppendLine("//---------------------------------------------------------------------------");
			Code.AppendLine();
			foreach (Projects.ProjectUsingNamespace PUN in o.UsingNamespaces)
				if (PUN.Client == true) Code.AppendFormat("using {0};{1}", PUN.Namespace, Environment.NewLine);
			Code.AppendLine();
			Code.AppendFormat("[assembly: System.Runtime.Serialization.ClientNamespaceAttribute(\"{0}\", ClrNamespace=\"{1}\")]{2}", o.Namespace.URI, o.Namespace.FullName, Environment.NewLine);
			Code.AppendLine(NamespaceCSGenerator.GenerateClientCode30(o.Namespace));
			Code.AppendLine();
			return Code.ToString();
		}

		public static string GenerateClientCode35(Projects.Project o)
		{

			StringBuilder Code = new StringBuilder();
			Code.AppendLine("//---------------------------------------------------------------------------");
			Code.AppendLine("// This code was generated by a tool. Changes to this file may cause ");
			Code.AppendLine("// incorrect behavior and will be lost if the code is regenerated.");
			Code.AppendLine("//");
			Code.AppendFormat("// WCF Architect Version:\t{0}{1}", Globals.ApplicationVersion.ToString(), Environment.NewLine);
			Code.AppendLine("// .NET Framework Version:\t3.5");
			Code.AppendLine("//---------------------------------------------------------------------------");
			Code.AppendLine();
			foreach (Projects.ProjectUsingNamespace PUN in o.UsingNamespaces)
				if (PUN.Client == true) Code.AppendFormat("using {0};{1}", PUN.Namespace, Environment.NewLine);
			Code.AppendLine();
			Code.AppendFormat("[assembly: System.Runtime.Serialization.ClientNamespaceAttribute(\"{0}\", ClrNamespace=\"{1}\")]{2}", o.Namespace.URI, o.Namespace.FullName, Environment.NewLine);
			Code.AppendLine(NamespaceCSGenerator.GenerateClientCode35(o.Namespace));
			Code.AppendLine();
			return Code.ToString();
		}

		public static string GenerateClientCode35Client(Projects.Project o)
		{
			StringBuilder Code = new StringBuilder();
			Code.AppendLine("//---------------------------------------------------------------------------");
			Code.AppendLine("// This code was generated by a tool. Changes to this file may cause ");
			Code.AppendLine("// incorrect behavior and will be lost if the code is regenerated.");
			Code.AppendLine("//");
			Code.AppendFormat("// WCF Architect Version:\t{0}{1}", Globals.ApplicationVersion.ToString(), Environment.NewLine);
			Code.AppendLine("// .NET Framework Version:\t3.5 (Client)");
			Code.AppendLine("//---------------------------------------------------------------------------");
			Code.AppendLine();
			foreach (Projects.ProjectUsingNamespace PUN in o.UsingNamespaces)
				if (PUN.IsFullFrameworkOnly == false)
					if (PUN.Client == true) Code.AppendFormat("using {0};{1}", PUN.Namespace, Environment.NewLine);
			Code.AppendLine();
			Code.AppendFormat("[assembly: System.Runtime.Serialization.ClientNamespaceAttribute(\"{0}\", ClrNamespace=\"{1}\")]{2}", o.Namespace.URI, o.Namespace.FullName, Environment.NewLine);
			Code.AppendLine(NamespaceCSGenerator.GenerateClientCode35(o.Namespace));
			Code.AppendLine();
			return Code.ToString();
		}

		public static string GenerateClientCode40(Projects.Project o)
		{
			StringBuilder Code = new StringBuilder();
			Code.AppendLine("//---------------------------------------------------------------------------");
			Code.AppendLine("// This code was generated by a tool. Changes to this file may cause ");
			Code.AppendLine("// incorrect behavior and will be lost if the code is regenerated.");
			Code.AppendLine("//");
			Code.AppendFormat("// WCF Architect Version:\t{0}{1}", Globals.ApplicationVersion.ToString(), Environment.NewLine);
			Code.AppendLine("// .NET Framework Version:\t4.0");
			Code.AppendLine("//---------------------------------------------------------------------------");
			Code.AppendLine();
			foreach (Projects.ProjectUsingNamespace PUN in o.UsingNamespaces)
				if (PUN.Client == true) Code.AppendFormat("using {0};{1}", PUN.Namespace, Environment.NewLine);
			Code.AppendLine();
			Code.AppendFormat("[assembly: System.Runtime.Serialization.ClientNamespaceAttribute(\"{0}\", ClrNamespace=\"{1}\")]{2}", o.Namespace.URI, o.Namespace.FullName, Environment.NewLine);
			Code.AppendLine(NamespaceCSGenerator.GenerateClientCode40(o.Namespace));
			Code.AppendLine();
			return Code.ToString();
		}

		public static string GenerateClientCode40Client(Projects.Project o)
		{
			StringBuilder Code = new StringBuilder();
			Code.AppendLine("//---------------------------------------------------------------------------");
			Code.AppendLine("// This code was generated by a tool. Changes to this file may cause ");
			Code.AppendLine("// incorrect behavior and will be lost if the code is regenerated.");
			Code.AppendLine("//");
			Code.AppendFormat("// WCF Architect Version:\t{0}{1}", Globals.ApplicationVersion.ToString(), Environment.NewLine);
			Code.AppendLine("// .NET Framework Version:\t4.0 (Client)");
			Code.AppendLine("//---------------------------------------------------------------------------");
			Code.AppendLine();
			foreach (Projects.ProjectUsingNamespace PUN in o.UsingNamespaces)
				if (PUN.IsFullFrameworkOnly == false)
					if (PUN.Client == true) Code.AppendFormat("using {0};{1}", PUN.Namespace, Environment.NewLine);
			Code.AppendLine();
			Code.AppendFormat("[assembly: System.Runtime.Serialization.ClientNamespaceAttribute(\"{0}\", ClrNamespace=\"{1}\")]{2}", o.Namespace.URI, o.Namespace.FullName, Environment.NewLine);
			Code.AppendLine(NamespaceCSGenerator.GenerateClientCode40(o.Namespace));
			Code.AppendLine();
			return Code.ToString();
		}

		public static string GenerateClientCode45(Projects.Project o)
		{
			StringBuilder Code = new StringBuilder();
			Code.AppendLine("//---------------------------------------------------------------------------");
			Code.AppendLine("// This code was generated by a tool. Changes to this file may cause ");
			Code.AppendLine("// incorrect behavior and will be lost if the code is regenerated.");
			Code.AppendLine("//");
			Code.AppendFormat("// WCF Architect Version:\t{0}{1}", Globals.ApplicationVersion.ToString(), Environment.NewLine);
			Code.AppendLine("// .NET Framework Version:\t4.0");
			Code.AppendLine("//---------------------------------------------------------------------------");
			Code.AppendLine();
			foreach (Projects.ProjectUsingNamespace PUN in o.UsingNamespaces)
				if (PUN.Client == true) Code.AppendFormat("using {0};{1}", PUN.Namespace, Environment.NewLine);
			Code.AppendLine();
			Code.AppendFormat("[assembly: System.Runtime.Serialization.ClientNamespaceAttribute(\"{0}\", ClrNamespace=\"{1}\")]{2}", o.Namespace.URI, o.Namespace.FullName, Environment.NewLine);
			Code.AppendLine(NamespaceCSGenerator.GenerateClientCode45(o.Namespace));
			Code.AppendLine();
			return Code.ToString();
		}
	}
}