<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:mwt="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:Interface="clr-namespace:WCFArchitect.Interface">
	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="pack://application:,,,/WCFArchitect;component/Themes/Colors.xaml" />
	</ResourceDictionary.MergedDictionaries>

	<Interface:ProjectTypeVisibilityConverter x:Key="ProjectTypeVisibilityConverter" />
	<Interface:ProjectTypeEnabledConverter x:Key="ProjectTypeEnabledConverter" />
	<Interface:BoolVisibilityConverter x:Key="BoolVisibilityConverter" />

	<!--<LinearGradientBrush x:Key="ListItemButtonHoverBackground" StartPoint="0.5,0" EndPoint="0.5,1">
		<GradientStop Color="#FFFFFCF3" Offset="0" />
		<GradientStop Color="#FFFFFBEC" Offset="0.4" />
		<GradientStop Color="#FFFFF6DA" Offset="0.4" />
		<GradientStop Color="#FFFFF2C9" Offset="0.5" />
		<GradientStop Color="#FFE8E8E8" Offset="0.5" />
		<GradientStop Color="#FFFFECB5" Offset="0.5" />
		<GradientStop Color="#FFFFECB5" Offset="1" />
	</LinearGradientBrush>
	<SolidColorBrush x:Key="ListItemButtonHoverBorder" Color="#FFE5C365" />
	<SolidColorBrush x:Key="ListItemButtonSelectedBackground" Color="#FFFFE8A6" />-->

	<Style x:Key="StretchedContainerStyle" TargetType="{x:Type ListBoxItem}">
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
	</Style>
	<Style x:Key="StretchedValueListItemContainerStyle" TargetType="{x:Type ListBoxItem}">
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
		<Setter Property="Margin" Value="0" />
		<Setter Property="Padding" Value="0" />
		<Style.Triggers>
			<Trigger Property="IsKeyboardFocusWithin" Value="True">
				<Setter Property="IsSelected" Value="True"/>
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style x:Key="SearchStretchedContainerStyle" TargetType="{x:Type ListBoxItem}">
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
		<Style.Triggers>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding IsSearching}" Value="True" />
					<Condition Binding="{Binding IsSearchMatch}" Value="False" />
				</MultiDataTrigger.Conditions>
				<Setter Property="Visibility" Value="Collapsed" />
			</MultiDataTrigger>
		</Style.Triggers>
	</Style>

	<Style x:Key="StretchedTreeViewContainerStyle" TargetType="{x:Type TreeViewItem}">
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
	</Style>

	<Style x:Key="SearchTextBox" TargetType="{x:Type TextBox}">
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
		<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
		<Setter Property="BorderBrush" Value="#AAAAAA"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Padding" Value="1"/>
		<Setter Property="AllowDrop" Value="true"/>
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
		<Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
		<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TextBox}">
					<Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" UseLayoutRounding="true">
						<Grid x:Name="LayoutGrid">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="24" />
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="Auto" />
							</Grid.ColumnDefinitions>
							<Image Source="pack://application:,,,/WCFArchitect;component/Icons/X16/Search.png" HorizontalAlignment="Center" VerticalAlignment="Center" UseLayoutRounding="True" Height="16" Width="16" Stretch="Uniform" Grid.Column="0"/>
							<ScrollViewer Margin="0" x:Name="PART_ContentHost" Grid.Column="1" VerticalAlignment="Center"/>
							<TextBlock x:Name="LabelText" Margin="0" Foreground="Gray" Text="Search..." Padding="2,1,0,0" VerticalAlignment="Center" FontFamily="Segoe UI" FontSize="12" Grid.Column="1" Visibility="Collapsed" />
							<Button x:Name="Clear" Grid.Column="2" Width="22">
								<Button.Template>
									<ControlTemplate>
										<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,0,0,0" Background="{StaticResource ItemHoverBackground}">
											<Image Source="pack://application:,,,/WCFArchitect;component/Icons/X16/SearchClear.png" HorizontalAlignment="Center" VerticalAlignment="Center" UseLayoutRounding="True" Height="16" Width="16" Stretch="Uniform"/>
										</Border>
									</ControlTemplate>
								</Button.Template>
							</Button>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="Text" Value="">
							<Setter Property="Visibility" Value="Collapsed" TargetName="Clear" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="Text" Value="" />
								<Condition Property="IsFocused" Value="False" />
							</MultiTrigger.Conditions>
							<Setter Property="Visibility" TargetName="LabelText" Value="Visible" />
						</MultiTrigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Foreground" Value="DimGray" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="VerticalScrollBarVisibility" Value="Visible"></Condition>
								<Condition Property="AcceptsReturn" Value="True"></Condition>
								<Condition Property="TextWrapping" Value="Wrap"></Condition>
							</MultiTrigger.Conditions>
							<MultiTrigger.Setters>
								<Setter Property="HorizontalAlignment" TargetName="LabelText" Value="Center" />
							</MultiTrigger.Setters>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="VerticalScrollBarVisibility" Value="Visible"></Condition>
								<Condition Property="AcceptsReturn" Value="True"></Condition>
								<Condition Property="TextWrapping" Value="WrapWithOverflow"></Condition>
							</MultiTrigger.Conditions>
							<MultiTrigger.Setters>
								<Setter Property="HorizontalAlignment" TargetName="LabelText" Value="Center" />
							</MultiTrigger.Setters>
						</MultiTrigger>
						<Trigger Property="IsPressed" SourceName="Clear" Value="True">
							<Setter Property="Text" Value="" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<DataTemplate x:Key="ListBoxItemTemplate">
		<Border Name="BG" Background="Transparent" BorderBrush="Transparent" BorderThickness="1" CornerRadius="0" >
			<Grid >
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="40" />
					<ColumnDefinition Width="*" />
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="5" />
				</Grid.ColumnDefinitions>
				<Grid.RowDefinitions>
					<RowDefinition Height="40" />
				</Grid.RowDefinitions>
				<Image Source="{Binding Path=ImageSource}" HorizontalAlignment="Center" VerticalAlignment="Center" UseLayoutRounding="True" Height="32" Width="32" Stretch="Uniform" Grid.Column="0"/>
				<Grid Grid.Column="1">
					<Grid.RowDefinitions>
						<RowDefinition Height="*" />
						<RowDefinition Height="Auto" />
					</Grid.RowDefinitions>
					<TextBlock Text="{Binding Path=Title}" Foreground="Black" TextWrapping="Wrap" TextTrimming="CharacterEllipsis" VerticalAlignment="Bottom" Grid.Row="0"/>
					<TextBlock Text="{Binding Path=Description}" Padding="0,0,0,5" Foreground="DarkGray" TextWrapping="Wrap" TextTrimming="CharacterEllipsis" VerticalAlignment="Top" Grid.Row="1"/>
				</Grid>
				<TextBlock Text="{Binding Path=Frameworks}" Foreground="Black" TextWrapping="Wrap" TextTrimming="CharacterEllipsis" Grid.Column="2"/>
			</Grid>
		</Border>
		<DataTemplate.Triggers>
			<DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListBoxItem}},Path=IsMouseOver}" Value="True">
				<Setter TargetName="BG" Property="Background" Value="{StaticResource ItemHoverBackground}" />
				<Setter TargetName="BG" Property="BorderBrush" Value="{StaticResource ItemHoverBorder}" />
			</DataTrigger>
			<DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListBoxItem}},Path=IsSelected}" Value="True">
				<Setter TargetName="BG" Property="Background" Value="{StaticResource ItemSelectedBackground}" />
				<Setter TargetName="BG" Property="BorderBrush" Value="{StaticResource ItemHoverBorder}" />
			</DataTrigger>
		</DataTemplate.Triggers>
	</DataTemplate>
	
	<Style x:Key="ListItemButtonStyle" TargetType="{x:Type Button}">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderBrush" Value="Transparent" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Padding" Value="0" />
		<Setter Property="UseLayoutRounding" Value="True" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid>
						<Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" CornerRadius="0" Margin="-1" />
						<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" UseLayoutRounding="{TemplateBinding UseLayoutRounding}" RecognizesAccessKey="True"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Background" Value="{StaticResource ItemHoverBackground}" />
							<Setter Property="BorderBrush" Value="{StaticResource ItemHoverBorder}" />
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="Background" Value="{StaticResource ItemSelectedBackground}" />
							<Setter Property="BorderBrush" Value="{StaticResource ItemHoverBorder}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="GridHeaderButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
		<Style.Setters>
			<Setter Property="Template" >
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Border x:Name="PART_Background" BorderThickness="0" Background="{StaticResource GridHeaderButtonNormalBrush}">
							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" UseLayoutRounding="{TemplateBinding UseLayoutRounding}" RecognizesAccessKey="True"/>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter Property="Background" Value="{StaticResource GridHeaderButtonOverBrush}" TargetName="PART_Background" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style.Setters>
	</Style>

	<Style x:Key="SeperatorStyle" TargetType="{x:Type Separator}" BasedOn="{StaticResource {x:Type Separator}}">
		<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}"/>
		<Setter Property="Margin" Value="26,2,0,2"/>
		<Setter Property="Focusable" Value="false"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Separator}">
					<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Height="1" UseLayoutRounding="true"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="ListViewItemContainerStyle" TargetType="{x:Type ListViewItem}">
		<Setter Property="Margin" Value="0" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType='{x:Type ListViewItem}'>
					<Border Name="BG" Background="Transparent" BorderBrush="Transparent" BorderThickness="1" CornerRadius="0" Padding="0,3">
						<GridViewRowPresenter Content="{TemplateBinding Content}" Columns="{TemplateBinding GridView.ColumnCollection}"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="BG" Property="Background" Value="{StaticResource ItemHoverBackground}" />
							<Setter TargetName="BG" Property="BorderBrush" Value="{StaticResource ItemHoverBorder}" />
						</Trigger>
						<Trigger Property="IsSelected" Value="True">
							<Setter TargetName="BG" Property="Background" Value="{StaticResource ItemSelectedBackground}" />
							<Setter TargetName="BG" Property="BorderBrush" Value="{StaticResource ItemHoverBorder}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

</ResourceDictionary>