<ResourceDictionary
			xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
			xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			xmlns:sf="http://schemas.syncfusion.com/wpf" >
	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="pack://application:,,,/NETPath;component/Themes/Defaults.xaml" />
		<ResourceDictionary Source="pack://application:,,,/NETPath;component/Themes/Colors.xaml" />
	</ResourceDictionary.MergedDictionaries>

	<Style TargetType="{x:Type sf:IntegerTextBox}">
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="WatermarkTextForeground" Value="{StaticResource DisabledFontColor}"/>
		<Setter Property="CaretBrush" Value="{StaticResource DefaultFontColor}" />
		<Setter Property="Foreground" Value="{StaticResource DefaultFontColor}" />
		<Setter Property="EditorForeground" Value="{StaticResource DefaultFontColor}" />
		<Setter Property="PositiveForeground" Value="{StaticResource DefaultFontColor}" />
		<Setter Property="NegativeForeground" Value="{StaticResource DefaultFontColor}" />
		<Setter Property="FontFamily" Value="{StaticResource DefaultFontFamily}" />
		<Setter Property="FontWeight" Value="{StaticResource DefaultFontWeight}" />
		<Setter Property="SelectionBrush" Value="{StaticResource DefaultSelectionColor}" />
		<Setter Property="Background" Value="{StaticResource DefaultBackgroundColor}"/>
		<Setter Property="WatermarkVisibility" Value="Collapsed" />
		<Setter Property="ContentElementVisibility" Value="Visible" />
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="UseLayoutRounding" Value="true"/>
		<Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
		<Setter Property="MinHeight" Value="24"/>
		<Setter Property="AllowDrop" Value="true"/>
		<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
		<Setter Property="Padding" Value="4"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type sf:IntegerTextBox}">
					<Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding CornerRadius}" Opacity="1">
						<Grid>
							<ScrollViewer Foreground="{TemplateBinding Foreground}" x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Visibility="{TemplateBinding ContentElementVisibility}" VerticalAlignment="{TemplateBinding VerticalAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
							<ContentControl x:Name="PART_Watermark" Background="{TemplateBinding WatermarkBackground}" ContentTemplate="{TemplateBinding WatermarkTemplate}" Content="{TemplateBinding WatermarkText}" Foreground="{TemplateBinding WatermarkTextForeground}" FontWeight="{TemplateBinding FontWeight}" FontStyle="{TemplateBinding FontStyle}" FontStretch="{TemplateBinding FontStretch}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" IsHitTestVisible="False" IsTabStop="False" Margin="2,0,0,0" Opacity="{TemplateBinding WatermarkOpacity}" Padding="{TemplateBinding Padding}" Grid.Row="0" Visibility="{TemplateBinding WatermarkVisibility}" VerticalAlignment="{TemplateBinding VerticalAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsKeyboardFocusWithin" Value="True">
							<Setter Property="Background" Value="{StaticResource FocusedBackgroundColor}" />
							<Setter Property="WatermarkVisibility" Value="Collapsed" />
							<Setter Property="ContentElementVisibility" Value="Visible" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Foreground" Value="{StaticResource DisabledFontColor}" />
							<Setter Property="PositiveForeground" Value="{StaticResource DisabledFontColor}" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Background" Value="{StaticResource MouseOverBackgroundColor}"/>
						</Trigger>
						<Trigger Property="IsReadOnly" Value="True">
							<Setter Property="Foreground" Value="{StaticResource ReadOnlyFontColor}"/>
							<Setter Property="Background" Value="{StaticResource DisabledBackgroundColor}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--<Style x:Key="{x:Type c1:C1NumericBox}" TargetType="{x:Type c1:C1NumericBox}">
		<Setter Property="Background" Value="{StaticResource DefaultBackgroundColor}" />
		<Setter Property="BorderBrush" Value="Transparent" />
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="Foreground" Value="{StaticResource DefaultFontColor}" />
		<Setter Property="SelectionBackground" Value="{StaticResource DefaultBackgroundColor}" />
		<Setter Property="SelectionForeground" Value="{StaticResource DefaultFontColor}" />
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="TextAlignment" Value="Right" />
		<Setter Property="Padding" Value="1,2" />
		<Setter Property="Interval" Value="33" />
		<Setter Property="Delay" Value="500" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="c1:C1NumericBox">
					<Grid x:Name="Root">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="ValidationStates">
								<VisualState x:Name="Valid" />
								<VisualState x:Name="InvalidUnfocused">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationDecorator" Storyboard.TargetProperty="ValidationState">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<c1:ValidationState>InvalidUnfocused</c1:ValidationState>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="InvalidFocused">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationDecorator" Storyboard.TargetProperty="ValidationState">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<c1:ValidationState>InvalidFocused</c1:ValidationState>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border x:Name="BackgroundElement" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="0" BorderBrush="{TemplateBinding BorderBrush}" >
							<c1:C1TextBoxBase x:Name="Text" BorderThickness="0" Foreground="{TemplateBinding Foreground}" Background="Transparent" SelectionBackground="{TemplateBinding SelectionBackground}" SelectionForeground="{TemplateBinding SelectionForeground}" TextAlignment="{TemplateBinding TextAlignment}" Watermark="{TemplateBinding Watermark}" FocusCuesVisibility="Collapsed" DisabledCuesVisibility="Collapsed" Margin="{TemplateBinding Padding}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
						</Border>
						<c1:C1ValidationDecorator x:Name="ValidationDecorator" Target="{Binding RelativeSource={RelativeSource TemplatedParent}}" Style="{TemplateBinding ValidationDecoratorStyle}" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger SourceName="ValidationDecorator" Property="ValidationState" Value="InvalidFocused">
							<Setter Property="Background" Value="{StaticResource ErrorBackgroundColor}" />
						</Trigger>
						<Trigger SourceName="ValidationDecorator" Property="ValidationState" Value="InvalidUnfocused">
							<Setter Property="Background" Value="{StaticResource ErrorBackgroundColor}" />
						</Trigger>
						<Trigger Property="IsKeyboardFocusWithin" Value="True">
							<Setter Property="Background" Value="{StaticResource FocusedBackgroundColor}" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Foreground" Value="{StaticResource DisabledFontColor}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>-->
	
</ResourceDictionary>