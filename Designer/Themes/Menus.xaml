<ResourceDictionary
			xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
			xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			xmlns:System="clr-namespace:System;assembly=mscorlib">

	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="pack://application:,,,/NETPath;component/Themes/Defaults.xaml"/>
	</ResourceDictionary.MergedDictionaries>

	<Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="{x:Type Separator}">
		<Setter Property="Height" Value="1"/>
		<Setter Property="Margin" Value="0,4,0,4"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Separator}">
					<Border BorderBrush="{StaticResource WindowBorderColor}" BorderThickness="1"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<Style x:Key="{x:Type ContextMenu}" TargetType="{x:Type ContextMenu}">
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="OverridesDefaultStyle" Value="True" />
		<Setter Property="Grid.IsSharedSizeScope" Value="true" />
		<Setter Property="UseLayoutRounding" Value="True" />
		<Setter Property="HasDropShadow" Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ContextMenu}">
					<Border x:Name="Border" Background="{StaticResource WindowBackground}" BorderBrush="{StaticResource WindowBorderColor}" BorderThickness="1">
						<StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<!-- TopLevelHeader -->
	<ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
		<Border Name="Border" Padding="0,5,0,0" >
			<Grid>
				<ContentPresenter Margin="6,3,6,3" ContentSource="Header" RecognizesAccessKey="True" />
				<Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsSubmenuOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Fade">
					<Border Name="SubmenuBorder" SnapsToDevicePixels="True" Background="{StaticResource WindowBackground}" BorderBrush="{StaticResource WindowBorderColor}" BorderThickness="1" >
						<ScrollViewer CanContentScroll="True">
							<StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
						</ScrollViewer>
					</Border>
				</Popup>
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="IsSuspendingPopupAnimation" Value="true">
				<Setter TargetName="Popup" Property="PopupAnimation" Value="None"/>
			</Trigger>
			<Trigger Property="IsHighlighted" Value="true">
				<Setter TargetName="Border" Property="Background" Value="{StaticResource WindowBorderColor}"/>
				<Setter TargetName="Border" Property="BorderBrush" Value="Transparent"/>
			</Trigger>
			<Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
				<Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="0,0,4,4"/>
				<Setter TargetName="SubmenuBorder" Property="Padding" Value="0,0,0,3"/>
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Foreground" Value="{StaticResource DisabledFontColor}"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	
	<!-- TopLevelItem -->
	<ControlTemplate x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}" TargetType="{x:Type MenuItem}">
		<Border Name="Border" Padding="0,5,0,0" >
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
					<ColumnDefinition Width="*" />
					<ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
					<ColumnDefinition Width="13"/>
				</Grid.ColumnDefinitions>
				<ContentPresenter Name="Icon" Margin="6,0,6,0" VerticalAlignment="Center" ContentSource="Icon"/>
				<Border Name="Check"  Width="13" Height="13" Visibility="Collapsed" Margin="6,0,6,0" Background="{StaticResource WindowBackground}" BorderThickness="1" BorderBrush="{StaticResource WindowBorderColor}">
					<Path Name="CheckMark" Width="7" Height="7" Visibility="Hidden" SnapsToDevicePixels="False" Stroke="{StaticResource DefaultFontColor}" StrokeThickness="2" Data="M 0 0 L 7 7 M 0 7 L 7 0" />
				</Border>
				<ContentPresenter Name="HeaderHost" Grid.Column="1" ContentSource="Header" RecognizesAccessKey="True"/>
				<TextBlock x:Name="InputGestureText" Grid.Column="2" Text="{TemplateBinding InputGestureText}" Margin="5,2,0,2" DockPanel.Dock="Right" />
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="IsHighlighted" Value="true">
				<Setter TargetName="Border" Property="Background" Value="{StaticResource WindowBorderColor}"/>
				<Setter TargetName="Border" Property="BorderBrush" Value="Transparent"/>
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Foreground" Value="{StaticResource DisabledFontColor}"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<!-- SubmenuItem -->
	<ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}" TargetType="{x:Type MenuItem}">
		<Border Name="Border" Padding="0,5,0,0" >
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
					<ColumnDefinition Width="*" />
					<ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
					<ColumnDefinition Width="13"/>
				</Grid.ColumnDefinitions>
				<ContentPresenter Name="Icon" Margin="6,0,6,0" VerticalAlignment="Center" ContentSource="Icon"/>
				<Border Name="Check"  Width="13" Height="13" Visibility="Collapsed" Margin="6,0,6,0" Background="{StaticResource WindowBackground}" BorderThickness="1" BorderBrush="{StaticResource WindowBorderColor}">
					<Path Name="CheckMark" Width="7" Height="7" Visibility="Hidden" SnapsToDevicePixels="False" Stroke="{StaticResource DefaultFontColor}" StrokeThickness="2" Data="M 0 0 L 7 7 M 0 7 L 7 0" />
				</Border>
				<ContentPresenter Name="HeaderHost" Grid.Column="1" ContentSource="Header" RecognizesAccessKey="True"/>
				<TextBlock x:Name="InputGestureText" Grid.Column="2" Text="{TemplateBinding InputGestureText}" Margin="5,2,0,2" DockPanel.Dock="Right" />
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="Icon" Value="{x:Null}">
				<Setter TargetName="Icon" Property="Visibility" Value="Hidden"/>
			</Trigger>
			<Trigger Property="IsChecked" Value="true">
				<Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
			</Trigger>
			<Trigger Property="IsCheckable" Value="true">
				<Setter TargetName="Check" Property="Visibility" Value="Visible"/>
				<Setter TargetName="Icon" Property="Visibility" Value="Hidden"/>
			</Trigger>
			<Trigger Property="IsHighlighted" Value="true">
				<Setter TargetName="Border" Property="Background" Value="{StaticResource WindowBorderColor}"/>
			</Trigger>
			<Trigger Property="IsEnabled" Value="false">
				<Setter Property="Foreground" Value="{StaticResource DisabledFontColor}"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<!-- SubmenuHeader -->
	<ControlTemplate x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
		<Border Name="Border" Padding="0,5,0,0" >
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
					<ColumnDefinition Width="*" />
					<ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
					<ColumnDefinition Width="13"/>
				</Grid.ColumnDefinitions>
				<ContentPresenter Name="Icon" Margin="6,0,6,0" VerticalAlignment="Center" ContentSource="Icon"/>
				<ContentPresenter Name="HeaderHost" Grid.Column="1" ContentSource="Header" RecognizesAccessKey="True"/>
				<TextBlock x:Name="InputGestureText" Grid.Column="2" Text="{TemplateBinding InputGestureText}" Margin="5,2,2,2" DockPanel.Dock="Right"/>
				<Path Grid.Column="3" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 0 7 L 4 3.5 Z"  Fill="{StaticResource DefaultFontColor}" />
				<Popup Name="Popup" Placement="Right" HorizontalOffset="-4" IsOpen="{TemplateBinding IsSubmenuOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Fade">
					<Border Name="SubmenuBorder" SnapsToDevicePixels="True" Background="{StaticResource WindowBorderColor}" BorderBrush="{StaticResource WindowBorderColor}" BorderThickness="0" >
						<ScrollViewer CanContentScroll="True">
							<StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
						</ScrollViewer>
					</Border>
				</Popup>
			</Grid>
		</Border>

		<ControlTemplate.Triggers>
			<Trigger Property="Icon" Value="{x:Null}">
				<Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
			</Trigger>
			<Trigger Property="IsHighlighted" Value="true">
				<Setter TargetName="Border" Property="Background" Value="{StaticResource WindowBorderColor}"/>
			</Trigger>
			<Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
				<Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="4"/>
				<Setter TargetName="SubmenuBorder" Property="Padding" Value="0,3,0,3"/>
			</Trigger>
			<Trigger Property="IsEnabled" Value="false">
				<Setter Property="Foreground" Value="{StaticResource DisabledFontColor}"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<!-- MenuItem Style -->

	<Style x:Key="{x:Type MenuItem}" TargetType="{x:Type MenuItem}">
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Style.Triggers>
			<Trigger Property="Role" Value="TopLevelHeader">
				<Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelHeaderTemplateKey}}"/>
				<Setter Property="Grid.IsSharedSizeScope" Value="true"/>
			</Trigger>
			<Trigger Property="Role" Value="TopLevelItem">
				<Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelItemTemplateKey}}"/>
			</Trigger>
			<Trigger Property="Role" Value="SubmenuHeader">
				<Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuHeaderTemplateKey}}"/>
			</Trigger>
			<Trigger Property="Role" Value="SubmenuItem">
				<Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}"/>
			</Trigger>
		</Style.Triggers>
	</Style>
	
</ResourceDictionary>