<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="pack://application:,,,/NETPath;component/Themes/Defaults.xaml"/>
	</ResourceDictionary.MergedDictionaries>

	<Style x:Key="ListItemButtonRight" TargetType="{x:Type Button}">
		<Setter Property="Background" Value="{StaticResource DefaultBackgroundColor}" />
		<Setter Property="BorderBrush" Value="Transparent" />
		<Setter Property="Foreground" Value="{StaticResource DefaultFontColor}" />
		<Setter Property="FontFamily" Value="{StaticResource DefaultFontFamily}" />
		<Setter Property="FontSize" Value="{DynamicResource DefaultFontSize}" />
		<Setter Property="FontWeight" Value="{StaticResource DefaultFontWeight}" />
		<Setter Property="UseLayoutRounding" Value="true"/>
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Padding" Value="10,2" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border x:Name="Border" CornerRadius="0,5,5,0" BorderThickness="0" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}">
						<Border x:Name="Overlay" CornerRadius="0,5,5,0" Background="Transparent" Padding="{TemplateBinding Padding}">
							<ContentPresenter Margin="2" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
						</Border>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsKeyboardFocused" Value="true">
							<Setter TargetName="Overlay" Property="Background" Value="{StaticResource ButtonMouseOverColor}" />
						</Trigger>
						<Trigger Property="IsDefaulted" Value="true">
							<Setter TargetName="Border" Property="Background" Value="{StaticResource ButtonDefaultColor}" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter TargetName="Overlay" Property="Background" Value="{StaticResource ButtonMouseOverColor}" />
						</Trigger>
						<Trigger Property="IsPressed" Value="true">
							<Setter TargetName="Overlay" Property="Background" Value="{StaticResource ButtonPressedColor}" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBackgroundColor}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="ListItemButtonLeft" TargetType="{x:Type Button}">
		<Setter Property="Background" Value="{StaticResource DefaultBackgroundColor}" />
		<Setter Property="BorderBrush" Value="Transparent" />
		<Setter Property="Foreground" Value="{StaticResource DefaultFontColor}" />
		<Setter Property="FontFamily" Value="{StaticResource DefaultFontFamily}" />
		<Setter Property="FontSize" Value="{DynamicResource DefaultFontSize}" />
		<Setter Property="FontWeight" Value="{StaticResource DefaultFontWeight}" />
		<Setter Property="UseLayoutRounding" Value="true"/>
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Padding" Value="10,2" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border x:Name="Border" CornerRadius="5,0,0,5" BorderThickness="0" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}">
						<Border x:Name="Overlay" CornerRadius="5,0,0,5" Background="Transparent" Padding="{TemplateBinding Padding}">
							<ContentPresenter Margin="2" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
						</Border>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsKeyboardFocused" Value="true">
							<Setter TargetName="Overlay" Property="Background" Value="{StaticResource ButtonMouseOverColor}" />
						</Trigger>
						<Trigger Property="IsDefaulted" Value="true">
							<Setter TargetName="Border" Property="Background" Value="{StaticResource ButtonDefaultColor}" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter TargetName="Overlay" Property="Background" Value="{StaticResource ButtonMouseOverColor}" />
						</Trigger>
						<Trigger Property="IsPressed" Value="true">
							<Setter TargetName="Overlay" Property="Background" Value="{StaticResource ButtonPressedColor}" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBackgroundColor}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

</ResourceDictionary>