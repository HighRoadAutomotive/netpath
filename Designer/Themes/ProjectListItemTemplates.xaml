<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:np="clr-namespace:NETPath.Projects;assembly=NETPath.Projects"
					xmlns:wap="clr-namespace:NETPath.Projects.WebApi;assembly=NETPath.Projects"
					xmlns:pc="http://schemas.ellipticbit.com/controls"
					xmlns:local="clr-namespace:NETPath.Interface">
	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="pack://application:,,,/NETPath;component/Themes/Defaults.xaml" />
	</ResourceDictionary.MergedDictionaries>

	<pc:BoolVisibilityConverter x:Key="BoolVisibilityConverter" />
	<pc:NotBoolVisibilityConverter x:Key="NotBoolVisibilityConverter" />
	<local:NamespaceCollapsedStateConverter x:Key="NamespaceCollapsedStateConverter" />

	<SolidColorBrush x:Key="MouseOverContainerColor" Color="#33FFFFFF" />
	<SolidColorBrush x:Key="PressedContainerColor" Color="#33000000" />

	<SolidColorBrush x:Key="NamespaceContainerColor" Color="#44000099" />
	<SolidColorBrush x:Key="ServiceContainerColor" Color="#AA006600" />
	<SolidColorBrush x:Key="RestContainerColor" Color="#AA669933" />
	<SolidColorBrush x:Key="DataContainerColor" Color="#AA006699" />
	<SolidColorBrush x:Key="EnumContainerColor" Color="#AA0033FF" />
	<SolidColorBrush x:Key="HostContainerColor" Color="#AA660000" />
	<SolidColorBrush x:Key="BindingContainerColor" Color="#AA993300" />

	<ItemsPanelTemplate x:Key="ProjectListPanelTemplate">
		<StackPanel Orientation="Vertical" IsItemsHost="True" />
	</ItemsPanelTemplate>


	<!-- Project Item Template -->
	<Style x:Key="ProjectContainerTemplate" TargetType="{x:Type Button}">
		<Setter Property="Foreground" Value="{StaticResource DefaultFontColor}" />
		<Setter Property="FontFamily" Value="{StaticResource DefaultFontFamily}" />
		<Setter Property="FontWeight" Value="{StaticResource DefaultFontWeight}" />
		<Setter Property="Foreground" Value="{StaticResource DefaultFontColor}"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderBrush" Value="{StaticResource DefaultBorderColor}"/>
		<Setter Property="HorizontalAlignment" Value="Stretch" />
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="UseLayoutRounding" Value="True" />
		<Setter Property="Command" Value="{x:Static local:Navigator.ChangeActivePageCommand}" />
		<Setter Property="CommandParameter" Value="{Binding}" />
		<Setter Property="Padding" Value="4" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
						</Grid.RowDefinitions>
						<Border x:Name="PART_Border" Grid.ColumnSpan="2" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" BorderThickness="0" UseLayoutRounding="{TemplateBinding UseLayoutRounding}" />
						<ContentPresenter Grid.Column="0" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" UseLayoutRounding="{TemplateBinding UseLayoutRounding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
					</Grid>
					<ControlTemplate.Triggers>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsEnabled" Value="True" />
								<Condition Property="IsMouseOver" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="PART_Border" Property="Background" Value="{StaticResource MouseOverContainerColor}" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsEnabled" Value="True" />
								<Condition Property="IsPressed" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="PART_Border" Property="Background" Value="{StaticResource PressedContainerColor}" />
						</MultiTrigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Opacity" Value="0.75"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>


	<!-- Service Templates -->
	<Style x:Key="ServiceContainerTemplate" TargetType="{x:Type ToggleButton}">
		<Setter Property="Foreground" Value="{StaticResource DefaultFontColor}" />
		<Setter Property="FontFamily" Value="{StaticResource DefaultFontFamily}" />
		<Setter Property="FontWeight" Value="{StaticResource DefaultFontWeight}" />
		<Setter Property="Background" Value="{StaticResource ServiceContainerColor}"/>
		<Setter Property="BorderBrush" Value="{StaticResource DefaultBorderColor}"/>
		<Setter Property="IsChecked" Value="{Binding Path=IsTreeExpanded}" />
		<Setter Property="HorizontalAlignment" Value="Stretch" />
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="UseLayoutRounding" Value="True" />
		<Setter Property="Padding" Value="4" />
		<Setter Property="Margin" Value="0,2,0,0" />
		<Setter Property="Command" Value="{x:Static local:Navigator.ChangeActivePageCommand}" />
		<Setter Property="CommandParameter" Value="{Binding}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
						</Grid.RowDefinitions>
						<Border x:Name="PART_Border" Grid.ColumnSpan="2" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" BorderThickness="0" UseLayoutRounding="{TemplateBinding UseLayoutRounding}" />
						<Border x:Name="Overlay" Grid.ColumnSpan="2" BorderThickness="0" Background="Transparent" BorderBrush="Transparent" Padding="5,0,0,0" />
						<Border x:Name="Selected" Grid.ColumnSpan="2" Background="{StaticResource FocusedBackgroundColor}" BorderThickness="0" UseLayoutRounding="{TemplateBinding UseLayoutRounding}" Visibility="{Binding Path=IsSelected, Converter={StaticResource BoolVisibilityConverter}}" />
						<ContentPresenter Grid.Column="0" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" UseLayoutRounding="{TemplateBinding UseLayoutRounding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
						<Button x:Name="Delete" Visibility="Collapsed" Grid.Column="1" Grid.RowSpan="2" Margin="0" Padding="0" Width="30" Style="{StaticResource ListItemButton}" Command="{x:Static local:Navigator.DeleteCommand}" CommandParameter="{Binding}" >
							<Image Source="pack://application:,,,/NETPath;component/Icons/X16/Delete.png" HorizontalAlignment="Center" VerticalAlignment="Center" UseLayoutRounding="True" Height="16" Width="16" Stretch="Uniform"/>
						</Button>
					</Grid>
					<ControlTemplate.Triggers>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsEnabled" Value="True" />
								<Condition Property="IsMouseOver" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="Overlay" Property="Background" Value="{StaticResource MouseOverContainerColor}" />
							<Setter TargetName="Delete" Property="Visibility" Value="Visible" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsEnabled" Value="True" />
								<Condition Property="IsPressed" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="Overlay" Property="Background" Value="{StaticResource PressedContainerColor}" />
						</MultiTrigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Opacity" Value="0.75"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<DataTemplate x:Key="WebApiServiceItemTemplate" DataType="{x:Type wap:WebApiService}">
		<Border Background="#01FFFFFF">
			<Border.ToolTip>
				<StackPanel Orientation="Vertical">
					<TextBlock Text="{Binding Path=Declaration, StringFormat='Server: {0}'}" Foreground="{StaticResource DefaultFontColor}" FontFamily="{StaticResource DefaultFontFamily}" FontSize="10pt" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" />
					<TextBlock Text="{Binding Path=ClientType.Declaration, StringFormat='Client: {0}'}" Visibility="{Binding Path=HasClientType, Converter={StaticResource BoolVisibilityConverter}}" Foreground="{StaticResource DefaultFontColor}" FontFamily="{StaticResource DefaultFontFamily}" FontSize="10pt" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" />
				</StackPanel>
			</Border.ToolTip>
			<StackPanel Orientation="Horizontal" >
				<Image x:Name="Icon" Source="pack://application:,,,/NETPath;component/Icons/X16/Service.png" Width="16" Height="16" Stretch="None" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0,0,4,0" />
				<TextBlock Text="{Binding Path=Name}" Foreground="{StaticResource DefaultFontColor}" FontFamily="{StaticResource DefaultFontFamily}" FontSize="11pt" />
			</StackPanel>
		</Border>
	</DataTemplate>


	<!-- Data Templates -->
	<Style x:Key="DataContainerTemplate" TargetType="{x:Type ToggleButton}">
		<Setter Property="FontFamily" Value="{StaticResource DefaultFontFamily}" />
		<Setter Property="FontWeight" Value="{StaticResource DefaultFontWeight}" />
		<Setter Property="Foreground" Value="{StaticResource DefaultFontColor}"/>
		<Setter Property="Background" Value="{StaticResource DataContainerColor}"/>
		<Setter Property="BorderBrush" Value="{StaticResource DefaultBorderColor}"/>
		<Setter Property="IsChecked" Value="{Binding Path=IsTreeExpanded}" />
		<Setter Property="HorizontalAlignment" Value="Stretch" />
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="UseLayoutRounding" Value="True" />
		<Setter Property="Padding" Value="4" />
		<Setter Property="Margin" Value="0,2,0,0" />
		<Setter Property="Command" Value="{x:Static local:Navigator.ChangeActivePageCommand}" />
		<Setter Property="CommandParameter" Value="{Binding}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
						</Grid.RowDefinitions>
						<Border x:Name="PART_Border" Grid.ColumnSpan="2" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" BorderThickness="0" UseLayoutRounding="{TemplateBinding UseLayoutRounding}" />
						<Border x:Name="Overlay" Grid.ColumnSpan="2" BorderThickness="0" Background="Transparent" BorderBrush="Transparent" Padding="5,0,0,0" />
						<Border x:Name="Selected" Grid.ColumnSpan="2" Background="{StaticResource FocusedBackgroundColor}" BorderThickness="0" UseLayoutRounding="{TemplateBinding UseLayoutRounding}" Visibility="{Binding Path=IsSelected, Converter={StaticResource BoolVisibilityConverter}}" />
						<ContentPresenter Grid.Column="0" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" UseLayoutRounding="{TemplateBinding UseLayoutRounding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
						<Button x:Name="Delete" Visibility="Collapsed" Grid.Column="1" Grid.RowSpan="2" Margin="0" Padding="0" Width="30" Style="{StaticResource ListItemButton}" Command="{x:Static local:Navigator.DeleteCommand}" CommandParameter="{Binding}" >
							<Image Source="pack://application:,,,/NETPath;component/Icons/X16/Delete.png" HorizontalAlignment="Center" VerticalAlignment="Center" UseLayoutRounding="True" Height="16" Width="16" Stretch="Uniform"/>
						</Button>
					</Grid>
					<ControlTemplate.Triggers>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsEnabled" Value="True" />
								<Condition Property="IsMouseOver" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="Overlay" Property="Background" Value="{StaticResource MouseOverContainerColor}" />
							<Setter TargetName="Delete" Property="Visibility" Value="Visible" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsEnabled" Value="True" />
								<Condition Property="IsPressed" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="Overlay" Property="Background" Value="{StaticResource PressedContainerColor}" />
						</MultiTrigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Opacity" Value="0.75"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<DataTemplate x:Key="WebApiDataItemTemplate" DataType="{x:Type wap:WebApiData}">
		<Border Background="#01FFFFFF">
			<Border.ToolTip>
				<StackPanel Orientation="Vertical">
					<TextBlock Text="{Binding Path=Declaration, StringFormat='Server: {0}'}" Grid.Row="1" Foreground="{StaticResource DefaultFontColor}" FontFamily="{StaticResource DefaultFontFamily}" FontSize="10pt" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" />
					<TextBlock Text="{Binding Path=ClientType.Declaration, StringFormat='Client: {0}'}" Grid.Row="2" Visibility="{Binding Path=HasClientType, Converter={StaticResource BoolVisibilityConverter}}" Foreground="{StaticResource DefaultFontColor}" FontFamily="{StaticResource DefaultFontFamily}" FontSize="10pt" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" />
					<TextBlock Text="{Binding Path=XAMLType.Declaration, StringFormat='XAML: {0}'}" Grid.Row="3" Visibility="{Binding Path=HasXAMLType, Converter={StaticResource BoolVisibilityConverter}}" Foreground="{StaticResource DefaultFontColor}" FontFamily="{StaticResource DefaultFontFamily}" FontSize="10pt" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" />
				</StackPanel>
			</Border.ToolTip>
			<StackPanel Orientation="Horizontal">
				<Image x:Name="Icon" Source="pack://application:,,,/NETPath;component/Icons/X16/Data.png" Width="16" Height="16" Stretch="None" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0,0,4,0" />
				<TextBlock Text="{Binding Path=Name}" Foreground="{StaticResource DefaultFontColor}" FontFamily="{StaticResource DefaultFontFamily}" FontSize="11pt" />
			</StackPanel>
		</Border>
	</DataTemplate>


	<!-- Enum Templates -->
	<Style x:Key="EnumContainerTemplate" TargetType="{x:Type ToggleButton}">
		<Setter Property="Foreground" Value="{StaticResource DefaultFontColor}" />
		<Setter Property="FontFamily" Value="{StaticResource DefaultFontFamily}" />
		<Setter Property="FontWeight" Value="{StaticResource DefaultFontWeight}" />
		<Setter Property="Foreground" Value="{StaticResource DefaultFontColor}"/>
		<Setter Property="Background" Value="{StaticResource EnumContainerColor}"/>
		<Setter Property="BorderBrush" Value="{StaticResource DefaultBorderColor}"/>
		<Setter Property="IsChecked" Value="{Binding Path=IsTreeExpanded}" />
		<Setter Property="HorizontalAlignment" Value="Stretch" />
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="UseLayoutRounding" Value="True" />
		<Setter Property="Padding" Value="4" />
		<Setter Property="Margin" Value="0,2,0,0" />
		<Setter Property="Command" Value="{x:Static local:Navigator.ChangeActivePageCommand}" />
		<Setter Property="CommandParameter" Value="{Binding}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
						</Grid.RowDefinitions>
						<Border x:Name="PART_Border" Grid.ColumnSpan="2" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" BorderThickness="0" UseLayoutRounding="{TemplateBinding UseLayoutRounding}" />
						<Border x:Name="Overlay" Grid.ColumnSpan="2" BorderThickness="0" Background="Transparent" BorderBrush="Transparent" Padding="5,0,0,0" />
						<Border x:Name="Selected" Grid.ColumnSpan="2" Background="{StaticResource FocusedBackgroundColor}" BorderThickness="0" UseLayoutRounding="{TemplateBinding UseLayoutRounding}" Visibility="{Binding Path=IsSelected, Converter={StaticResource BoolVisibilityConverter}}" />
						<ContentPresenter Grid.Column="0" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" UseLayoutRounding="{TemplateBinding UseLayoutRounding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
						<Button x:Name="Delete" Visibility="Collapsed" Grid.Column="1" Grid.RowSpan="2" Margin="0" Padding="0" Width="30" Style="{StaticResource ListItemButton}" Command="{x:Static local:Navigator.DeleteCommand}" CommandParameter="{Binding}" >
							<Image Source="pack://application:,,,/NETPath;component/Icons/X16/Delete.png" HorizontalAlignment="Center" VerticalAlignment="Center" UseLayoutRounding="True" Height="16" Width="16" Stretch="Uniform"/>
						</Button>
					</Grid>
					<ControlTemplate.Triggers>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsEnabled" Value="True" />
								<Condition Property="IsMouseOver" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="Overlay" Property="Background" Value="{StaticResource MouseOverContainerColor}" />
							<Setter TargetName="Delete" Property="Visibility" Value="Visible" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsEnabled" Value="True" />
								<Condition Property="IsPressed" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="Overlay" Property="Background" Value="{StaticResource PressedContainerColor}" />
						</MultiTrigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Opacity" Value="0.75"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<DataTemplate x:Key="EnumItemTemplate" DataType="{x:Type np:Enum}">
		<Border Background="#01FFFFFF">
			<Border.ToolTip>
				<StackPanel Orientation="Vertical">
					<TextBlock Text="{Binding Path=Declaration, StringFormat='Server: {0}'}" Grid.Row="1" Foreground="{StaticResource DefaultFontColor}" FontFamily="{StaticResource DefaultFontFamily}" FontSize="10pt" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" />
					<TextBlock Text="{Binding Path=ClientType.Declaration, StringFormat='Client: {0}'}" Grid.Row="2" Visibility="{Binding Path=HasClientType, Converter={StaticResource BoolVisibilityConverter}}" Foreground="{StaticResource DefaultFontColor}" FontFamily="{StaticResource DefaultFontFamily}" FontSize="10pt" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" />
				</StackPanel>
			</Border.ToolTip>
			<StackPanel Orientation="Horizontal">
				<Image x:Name="Icon" Source="pack://application:,,,/NETPath;component/Icons/X16/Enum.png" Width="16" Height="16" Stretch="None" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0,0,4,0" />
				<TextBlock Text="{Binding Path=Name}" Foreground="{StaticResource DefaultFontColor}" FontFamily="{StaticResource DefaultFontFamily}" FontSize="11pt" />
			</StackPanel>
		</Border>
	</DataTemplate>


	<!-- Binding Templates -->
	<Style x:Key="BindingContainerTemplate" TargetType="{x:Type ToggleButton}">
		<Setter Property="Foreground" Value="{StaticResource DefaultFontColor}" />
		<Setter Property="FontFamily" Value="{StaticResource DefaultFontFamily}" />
		<Setter Property="FontWeight" Value="{StaticResource DefaultFontWeight}" />
		<Setter Property="Foreground" Value="{StaticResource DefaultFontColor}"/>
		<Setter Property="Background" Value="{StaticResource BindingContainerColor}"/>
		<Setter Property="BorderBrush" Value="{StaticResource DefaultBorderColor}"/>
		<Setter Property="IsChecked" Value="{Binding Path=IsTreeExpanded}" />
		<Setter Property="HorizontalAlignment" Value="Stretch" />
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="UseLayoutRounding" Value="True" />
		<Setter Property="Padding" Value="4" />
		<Setter Property="Margin" Value="0,2,0,0" />
		<Setter Property="Command" Value="{x:Static local:Navigator.ChangeActivePageCommand}" />
		<Setter Property="CommandParameter" Value="{Binding}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
						</Grid.RowDefinitions>
						<Border x:Name="PART_Border" Grid.ColumnSpan="2" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" BorderThickness="0" UseLayoutRounding="{TemplateBinding UseLayoutRounding}" />
						<Border x:Name="Overlay" Grid.ColumnSpan="2" BorderThickness="0" Background="Transparent" BorderBrush="Transparent" Padding="5,0,0,0" />
						<Border x:Name="Selected" Grid.ColumnSpan="2" Background="{StaticResource FocusedBackgroundColor}" BorderThickness="0" UseLayoutRounding="{TemplateBinding UseLayoutRounding}" Visibility="{Binding Path=IsSelected, Converter={StaticResource BoolVisibilityConverter}}" />
						<ContentPresenter Grid.Column="0" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" UseLayoutRounding="{TemplateBinding UseLayoutRounding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
						<Button x:Name="Delete" Visibility="Collapsed" Grid.Column="1" Grid.RowSpan="2" Margin="0" Padding="0" Width="30" Style="{StaticResource ListItemButton}" Command="{x:Static local:Navigator.DeleteCommand}" CommandParameter="{Binding}" >
							<Image Source="pack://application:,,,/NETPath;component/Icons/X16/Delete.png" HorizontalAlignment="Center" VerticalAlignment="Center" UseLayoutRounding="True" Height="16" Width="16" Stretch="Uniform"/>
						</Button>
					</Grid>
					<ControlTemplate.Triggers>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsEnabled" Value="True" />
								<Condition Property="IsMouseOver" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="Overlay" Property="Background" Value="{StaticResource MouseOverContainerColor}" />
							<Setter TargetName="Delete" Property="Visibility" Value="Visible" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsEnabled" Value="True" />
								<Condition Property="IsPressed" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="Overlay" Property="Background" Value="{StaticResource PressedContainerColor}" />
						</MultiTrigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Opacity" Value="0.75"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>


	<!-- Namespace Templates -->
	<Style x:Key="NamespaceContainerTemplate" TargetType="{x:Type ToggleButton}">
		<Setter Property="Foreground" Value="{StaticResource DefaultFontColor}" />
		<Setter Property="FontFamily" Value="{StaticResource DefaultFontFamily}" />
		<Setter Property="FontWeight" Value="{StaticResource DefaultFontWeight}" />
		<Setter Property="Foreground" Value="{StaticResource DefaultFontColor}"/>
		<Setter Property="Background" Value="{StaticResource NamespaceContainerColor}"/>
		<Setter Property="BorderBrush" Value="{StaticResource DefaultBorderColor}"/>
		<Setter Property="IsChecked" Value="{Binding Path=IsTreeExpanded}" />
		<Setter Property="HorizontalAlignment" Value="Stretch" />
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="UseLayoutRounding" Value="True" />
		<Setter Property="Command" Value="{x:Static local:Navigator.ChangeActivePageCommand}" />
		<Setter Property="CommandParameter" Value="{Binding}" />
		<Setter Property="Margin" Value="0,2,0,0" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border x:Name="PART_Border" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" BorderThickness="0" UseLayoutRounding="{TemplateBinding UseLayoutRounding}" >
						<Border x:Name="Overlay" BorderThickness="0" Background="Transparent" BorderBrush="Transparent" Padding="5,0,0,0">
							<ContentPresenter Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" UseLayoutRounding="{TemplateBinding UseLayoutRounding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
						</Border>
					</Border>
					<ControlTemplate.Triggers>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsEnabled" Value="True" />
								<Condition Property="IsMouseOver" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="Overlay" Property="Background" Value="{StaticResource MouseOverContainerColor}" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsEnabled" Value="True" />
								<Condition Property="IsPressed" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="Overlay" Property="Background" Value="{StaticResource PressedContainerColor}" />
						</MultiTrigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Opacity" Value="0.75"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<DataTemplate x:Key="WebApiNamespaceItemTemplate" DataType="{x:Type wap:WebApiNamespace}">
		<Border Background="#01FFFFFF">
			<Border.ToolTip>
				<StackPanel Orientation="Vertical">
					<TextBlock Text="{Binding Path=Declaration}" Foreground="{StaticResource DefaultFontColor}" FontFamily="{StaticResource DefaultFontFamily}" FontSize="10pt" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" />
				</StackPanel>
			</Border.ToolTip>
			<StackPanel Orientation="Vertical">
				<Grid>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="*" />
						<ColumnDefinition Width="Auto" />
						<ColumnDefinition Width="Auto" />
					</Grid.ColumnDefinitions>
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto" />
						<RowDefinition Height="Auto" />
					</Grid.RowDefinitions>
					<StackPanel Orientation="Horizontal" Grid.Column="0" Grid.Row="0" Margin="3">
						<Image x:Name="Icon" Source="pack://application:,,,/NETPath;component/Icons/X16/Namespace.png" Width="16" Height="16" Stretch="None" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0,0,4,0" />
						<TextBlock Text="{Binding Path=Name}" Foreground="{StaticResource DefaultFontColor}" FontFamily="{StaticResource DefaultFontFamily}" FontSize="11pt" />
					</StackPanel>
					<Button x:Name="Collapse" Grid.Column="1" Grid.Row="0" Visibility="Collapsed" Margin="0" Padding="0" Width="30" Style="{StaticResource ListItemButton}" Command="{x:Static local:Navigator.CollapseCommand}" CommandParameter="{Binding}" >
						<Image Source="{Binding Path=Collapsed, Converter={StaticResource NamespaceCollapsedStateConverter}}" HorizontalAlignment="Center" VerticalAlignment="Center" UseLayoutRounding="True" Height="16" Width="16" Stretch="Uniform"/>
					</Button>
					<Button x:Name="Delete" Grid.Column="2" Grid.Row="0" Visibility="Collapsed" Margin="0" Padding="0" Width="30" Style="{StaticResource ListItemButton}" Command="{x:Static local:Navigator.DeleteCommand}" CommandParameter="{Binding}" >
						<Image Source="pack://application:,,,/NETPath;component/Icons/X16/Delete.png" HorizontalAlignment="Center" VerticalAlignment="Center" UseLayoutRounding="True" Height="16" Width="16" Stretch="Uniform"/>
					</Button>
				</Grid>
				<StackPanel Orientation="Vertical" Margin="5,5,0,5" Visibility="{Binding Path=Collapsed, Converter={StaticResource NotBoolVisibilityConverter}}">
					<local:ProjectList x:Name="SubItems1" ItemsSource="{Binding Path=Children}" ItemContainerStyle="{StaticResource NamespaceContainerTemplate}" ItemTemplateSelector="{DynamicResource ProjectListItemTemplateSelector}" ItemsPanel="{StaticResource ProjectListPanelTemplate}" HorizontalAlignment="Stretch" />
					<local:ProjectList x:Name="SubItems2" ItemsSource="{Binding Path=Services}" ItemContainerStyle="{StaticResource ServiceContainerTemplate}" ItemTemplateSelector="{DynamicResource ProjectListItemTemplateSelector}" ItemsPanel="{StaticResource ProjectListPanelTemplate}" HorizontalAlignment="Stretch" />
					<local:ProjectList x:Name="SubItems3" ItemsSource="{Binding Path=Data}" ItemContainerStyle="{StaticResource DataContainerTemplate}" ItemTemplateSelector="{DynamicResource ProjectListItemTemplateSelector}" ItemsPanel="{StaticResource ProjectListPanelTemplate}" HorizontalAlignment="Stretch" />
					<local:ProjectList x:Name="SubItems4" ItemsSource="{Binding Path=Enums}" ItemContainerStyle="{StaticResource EnumContainerTemplate}" ItemTemplateSelector="{DynamicResource ProjectListItemTemplateSelector}" ItemsPanel="{StaticResource ProjectListPanelTemplate}" HorizontalAlignment="Stretch" />
				</StackPanel>
			</StackPanel>
		</Border>
		<DataTemplate.Triggers>
			<DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ToggleButton}},Path=IsMouseOver}" Value="True" >
				<Setter TargetName="Collapse" Property="Visibility" Value="Visible" />
				<Setter TargetName="Delete" Property="Visibility" Value="Visible" />
			</DataTrigger>
		</DataTemplate.Triggers>
	</DataTemplate>

	<local:ProjectListItemTemplateSelector x:Key="ProjectListItemTemplateSelector" WebApiNamespaceTemplate="{StaticResource WebApiNamespaceItemTemplate}" WebApiServiceTemplate="{StaticResource WebApiServiceItemTemplate}" WebApiDataTemplate="{StaticResource WebApiDataItemTemplate}" EnumTemplate="{StaticResource EnumItemTemplate}" />

</ResourceDictionary>