<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:mwt="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero">
	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="pack://application:,,,/WCFArchitect;component/Themes/Colors.xaml" />
	</ResourceDictionary.MergedDictionaries>

	<!-- Toolbar Style Colors -->
	<!--<SolidColorBrush x:Key="ToolBarTrayBackground" Color="#FF90A4BE" />
	<SolidColorBrush x:Key="ToolBarBackground" Color="LightSteelBlue" />
	<SolidColorBrush x:Key="ToolBarToggleButtonBackground" Color="#FFC0D4EE" />
	<SolidColorBrush x:Key="ToolBarButtonHover" Color="#FFC2E0FF"/>
	<SolidColorBrush x:Key="ToolBarGripper" Color="#FF60748E"/>-->
	<SolidColorBrush x:Key="ToolBarPanelBackground" Color="#FF9CAAC1" />
	<SolidColorBrush x:Key="ToolBarTrayBackground" Color="#00CCCCCC" />
	<SolidColorBrush x:Key="ToolBarBackground" Color="#FFBCC7D8" />
	<SolidColorBrush x:Key="ToolBarBorder" Color="#FFD5DCE8" />
	<SolidColorBrush x:Key="ToolBarInnerBorder" Color="#99D5DCE8" />
	<SolidColorBrush x:Key="ToolBarMouseOverBackground" Color="#33FFFFFF" />
	<SolidColorBrush x:Key="ToolBarToggleButtonBackground" Color="#CCCCCCCC" />
	<SolidColorBrush x:Key="ToolBarButtonHover" Color="#FFC2E0FF"/>
	<SolidColorBrush x:Key="ToolBarGripper" Color="#FF60728C"/>
	<SolidColorBrush x:Key="ToolBarMenuBorder" Color="#808080"/>
	<SolidColorBrush x:Key="ToolBarSubMenuBackground" Color="#FDFDFD"/>

	<!-- File Menu Button Style -->
	<SolidColorBrush x:Key="FileMenuSelectedLowerGradient" Color="#33FFFFFF" />
	<LinearGradientBrush x:Key="FileMenuSelectedGradient" StartPoint="0.5,0" EndPoint="0.5,1">
		<GradientStop Color="#00FFFFFF" Offset="0" />
		<GradientStop Color="#AA2B3B4B" Offset="1" />
	</LinearGradientBrush>
	<Style x:Key="FileMenuButtonStyle" TargetType="{x:Type ToggleButton}">
		<Setter Property="Background" Value="{StaticResource ToolBarBackground}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Foreground" Value="Black"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Padding" Value="1"/>
		<Setter Property="Height" Value="40" />
		<Setter Property="Margin" Value="0,2,0,3" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border Name="OuterBorder" BorderThickness="1" BorderBrush="{StaticResource ToolBarBorder}" CornerRadius="0" Background="{TemplateBinding Background}">
						<Grid>
							<Border Name="MouseOverBackground" Background="{StaticResource ToolBarMouseOverBackground}" Visibility="Collapsed" />
							<Border Name="LowerGradient" Background="Transparent" />
							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" UseLayoutRounding="{TemplateBinding UseLayoutRounding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="MouseOverBackground" Property="Visibility" Value="Visible" />
							<Setter TargetName="LowerGradient" Property="Background" Value="{StaticResource FileMenuSelectedLowerGradient}" />
						</Trigger>
						<Trigger Property="IsChecked" Value="True">
							<Setter TargetName="LowerGradient" Property="Background" Value="{StaticResource FileMenuSelectedGradient}" />
							<Setter TargetName="OuterBorder" Property="BorderThickness" Value="1,1,1,0" />
							<Setter Property="Padding" Value="1,1,1,5" />
							<Setter Property="Margin" Value="0,2,0,0" />
							<Setter Property="Height" Value="43" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Foreground" Value="#ADADAD"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="MainToggleButtonStyle" TargetType="{x:Type ToggleButton}">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderBrush" Value="Transparent"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Padding" Value="1"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border x:Name="Chrome" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" UseLayoutRounding="true">
						<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" UseLayoutRounding="{TemplateBinding UseLayoutRounding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter Property="Background" Value="{StaticResource ItemHoverBackground}"/>
							<Setter Property="BorderBrush" Value="{StaticResource ItemHoverBorder}"/>
						</Trigger>
						<Trigger Property="IsChecked" Value="true">
							<Setter Property="Background" Value="{StaticResource ItemSelectedBackground}"/>
							<Setter Property="BorderBrush" Value="{StaticResource ItemHoverBorder}"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Opacity" Value="0.6"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="ToolbarButtonStyle" TargetType="{x:Type Button}">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderBrush" Value="Transparent"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Padding" Value="1"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border x:Name="Chrome" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" UseLayoutRounding="true">
						<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" UseLayoutRounding="{TemplateBinding UseLayoutRounding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
					</Border>
					<ControlTemplate.Triggers>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver" Value="True" />
								<Condition Property="IsPressed" Value="False" />
							</MultiTrigger.Conditions>
							<Setter Property="Background" Value="{StaticResource ItemHoverBackground}" />
							<Setter Property="BorderBrush" Value="{StaticResource ItemHoverBorder}" />
						</MultiTrigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="Background" Value="{StaticResource ItemSelectedBackground}" />
							<Setter Property="BorderBrush" Value="{StaticResource ItemHoverBorder}" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Opacity" Value="0.6"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- ToolBar Style -->
	<Style x:Key="ToolBarVerticalOverflowButtonStyle" TargetType="{x:Type ToggleButton}">
		<Setter Property="Background" Value="{StaticResource ToolBarToggleButtonBackground}"/>
		<Setter Property="MinHeight" Value="0"/>
		<Setter Property="MinWidth" Value="0"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border x:Name="Bd" Background="{TemplateBinding Background}" CornerRadius="0,0,3,3" UseLayoutRounding="true">
						<Canvas HorizontalAlignment="Right" Height="6" Margin="2,7,2,2" UseLayoutRounding="true" VerticalAlignment="Bottom" Width="7">
							<Path Data="M 0.5 0 L 0.5 5" Stroke="{TemplateBinding Foreground}"/>
							<Path Data="M 3 -0.5 L 6 2.5 L 3 5.5 Z" Fill="{TemplateBinding Foreground}"/>
						</Canvas>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter Property="Background" TargetName="Bd" Value="{StaticResource ToolBarButtonHover}"/>
						</Trigger>
						<Trigger Property="IsKeyboardFocused" Value="true">
							<Setter Property="Background" TargetName="Bd" Value="{StaticResource ToolBarButtonHover}"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{StaticResource ToolBarGripper}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="true">
				<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
			</DataTrigger>
		</Style.Triggers>
	</Style>
	<Style x:Key="ToolBarHorizontalOverflowButtonStyle" TargetType="{x:Type ToggleButton}">
		<Setter Property="Background" Value="{StaticResource ToolBarToggleButtonBackground}"/>
		<Setter Property="MinHeight" Value="0"/>
		<Setter Property="MinWidth" Value="0"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border x:Name="Bd" Background="{TemplateBinding Background}" CornerRadius="0,3,3,0" UseLayoutRounding="true">
						<Canvas HorizontalAlignment="Right" Height="7" Margin="7,2,2,2" UseLayoutRounding="true" VerticalAlignment="Bottom" Width="6">
							<Path Data="M 0 0.5 L 5 0.5" Stroke="{TemplateBinding Foreground}"/>
							<Path Data="M -0.5 3 L 5.5 3 L 2.5 6 Z" Fill="{TemplateBinding Foreground}"/>
						</Canvas>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter Property="Background" TargetName="Bd" Value="{StaticResource ToolBarButtonHover}"/>
						</Trigger>
						<Trigger Property="IsKeyboardFocused" Value="true">
							<Setter Property="Background" TargetName="Bd" Value="{StaticResource ToolBarButtonHover}"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{StaticResource ToolBarGripper}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="true">
				<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
			</DataTrigger>
		</Style.Triggers>
	</Style>
	<Style x:Key="ToolBarThumbStyle" TargetType="{x:Type Thumb}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Border Background="Transparent" Padding="{TemplateBinding Padding}" UseLayoutRounding="True">
						<Rectangle>
							<Rectangle.Fill>
								<DrawingBrush TileMode="Tile" Viewbox="0,0,4,4" Viewport="0,0,4,4" ViewportUnits="Absolute" ViewboxUnits="Absolute">
									<DrawingBrush.Drawing>
										<DrawingGroup>
											<GeometryDrawing Brush="{StaticResource ToolBarGripper}" Geometry="M 0 0 L 0 2 L 2 2 L 2 0 z"/>
										</DrawingGroup>
									</DrawingBrush.Drawing>
								</DrawingBrush>
							</Rectangle.Fill>
						</Rectangle>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter Property="Cursor" Value="SizeAll"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="ToolBarMainPanelBorderStyle" TargetType="{x:Type Border}">
		<Setter Property="Margin" Value="0,0,0,0"/>
		<Setter Property="CornerRadius" Value="0"/>
		<Style.Triggers>
			<DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="true">
				<Setter Property="CornerRadius" Value="0,0,0,0"/>
			</DataTrigger>
		</Style.Triggers>
	</Style>
	<Style x:Key="ToolBarStyle" TargetType="{x:Type ToolBar}">
		<Setter Property="BorderBrush" Value="{StaticResource ToolBarBorder}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Padding" Value="2,0" />
		<Setter Property="Background" Value="{StaticResource ToolBarBackground}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToolBar}">
					<Grid x:Name="Grid" Margin="3,1,1,1" UseLayoutRounding="true">
						<Grid x:Name="OverflowGrid" HorizontalAlignment="Right">
							<ToggleButton x:Name="OverflowButton" Visibility="Collapsed" ClickMode="Press" FocusVisualStyle="{x:Null}" IsChecked="{Binding IsOverflowOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" IsEnabled="{TemplateBinding HasOverflowItems}" Style="{StaticResource ToolBarHorizontalOverflowButtonStyle}"/>
							<Popup x:Name="OverflowPopup" AllowsTransparency="true" Focusable="false" IsOpen="{Binding IsOverflowOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom" StaysOpen="false">
								<mwt:SystemDropShadowChrome x:Name="Shdw" Color="Transparent">
									<Border x:Name="ToolBarSubMenuBorder" BorderBrush="{StaticResource ToolBarMenuBorder}" BorderThickness="1" Background="{StaticResource ToolBarSubMenuBackground}" RenderOptions.ClearTypeHint="Enabled">
										<ToolBarOverflowPanel x:Name="PART_ToolBarOverflowPanel" KeyboardNavigation.DirectionalNavigation="Cycle" FocusVisualStyle="{x:Null}" Focusable="true" Margin="2" UseLayoutRounding="{TemplateBinding UseLayoutRounding}" KeyboardNavigation.TabNavigation="Cycle" WrapWidth="200"/>
									</Border>
								</mwt:SystemDropShadowChrome>
							</Popup>
						</Grid>
						<Border x:Name="MainPanelBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" Style="{StaticResource ToolBarMainPanelBorderStyle}">
							<DockPanel KeyboardNavigation.TabIndex="1" KeyboardNavigation.TabNavigation="Local">
								<Thumb x:Name="ToolBarThumb" Margin="-3,-1,0,0" Padding="6,5,1,2" Style="{StaticResource ToolBarThumbStyle}" Width="10"/>
								<ContentPresenter x:Name="ToolBarHeader" ContentSource="Header" HorizontalAlignment="Center" Margin="4,0,4,0" UseLayoutRounding="{TemplateBinding UseLayoutRounding}" VerticalAlignment="Center"/>
								<ToolBarPanel x:Name="PART_ToolBarPanel" IsItemsHost="true" Margin="0" UseLayoutRounding="{TemplateBinding UseLayoutRounding}"/>
							</DockPanel>
						</Border>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsOverflowOpen" Value="true">
							<Setter Property="IsEnabled" TargetName="ToolBarThumb" Value="false"/>
						</Trigger>
						<Trigger Property="Header" Value="{x:Null}">
							<Setter Property="Visibility" TargetName="ToolBarHeader" Value="Collapsed"/>
						</Trigger>
						<Trigger Property="ToolBarTray.IsLocked" Value="true">
							<Setter Property="Visibility" TargetName="ToolBarThumb" Value="Collapsed"/>
						</Trigger>
						<Trigger Property="HasDropShadow" SourceName="OverflowPopup" Value="true">
							<Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
							<Setter Property="UseLayoutRounding" TargetName="Shdw" Value="true"/>
							<Setter Property="Color" TargetName="Shdw" Value="#71000000"/>
						</Trigger>
						<Trigger Property="Orientation" Value="Vertical">
							<Setter Property="Margin" TargetName="Grid" Value="1,3,1,1"/>
							<Setter Property="Style" TargetName="OverflowButton" Value="{StaticResource ToolBarVerticalOverflowButtonStyle}"/>
							<Setter Property="Height" TargetName="ToolBarThumb" Value="10"/>
							<Setter Property="Width" TargetName="ToolBarThumb" Value="Auto"/>
							<Setter Property="Margin" TargetName="ToolBarThumb" Value="-1,-3,0,0"/>
							<Setter Property="Padding" TargetName="ToolBarThumb" Value="5,6,6,1"/>
							<Setter Property="Margin" TargetName="ToolBarHeader" Value="0,0,0,4"/>
							<Setter Property="Margin" TargetName="PART_ToolBarPanel" Value="1,0,2,2"/>
							<Setter Property="DockPanel.Dock" TargetName="ToolBarThumb" Value="Top"/>
							<Setter Property="DockPanel.Dock" TargetName="ToolBarHeader" Value="Top"/>
							<Setter Property="HorizontalAlignment" TargetName="OverflowGrid" Value="Stretch"/>
							<Setter Property="VerticalAlignment" TargetName="OverflowGrid" Value="Bottom"/>
							<Setter Property="Placement" TargetName="OverflowPopup" Value="Right"/>
							<Setter Property="Margin" TargetName="MainPanelBorder" Value="0,0,0,11"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="true">
				<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
			</DataTrigger>
		</Style.Triggers>
	</Style>
</ResourceDictionary>