<ContentControl x:Class="WCFArchitect.Interface.Data.Data" x:ClassModifier="internal"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" mc:Ignorable="d" 
	xmlns:Data="clr-namespace:WCFArchitect.Interface.Data"
	xmlns:Projects="clr-namespace:WCFArchitect.Projects;assembly=WCFArchitect.Projects"
	xmlns:Docs="clr-namespace:WCFArchitect.Interface.Documentation"
	xmlns:pc="http://schemas.propsectivesoftware.com/pc"
	Margin="5"
	d:DesignHeight="950" d:DesignWidth="1000" DataContext="{Binding RelativeSource={RelativeSource Self}}" >
	<ContentControl.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="pack://application:,,,/WCFArchitect;component/Themes/Colors.xaml" />
				<ResourceDictionary>
					<Data:DataScopeConverter x:Key="DataScopeConverter" />
					<Data:DataScopeNameConverter x:Key="DataScopeNameConverter" />
					<Data:ElementOrderConverter x:Key="ElementOrderConverter" />
					<pc:BoolVisibilityConverter x:Key="BoolVisibilityConverter" />
				</ResourceDictionary>
			</ResourceDictionary.MergedDictionaries>
		</ResourceDictionary>
	</ContentControl.Resources>
	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" />
			<RowDefinition Height="Auto" />
			<RowDefinition Height="Auto" />
			<RowDefinition Height="Auto" />
			<RowDefinition Height="Auto" />
			<RowDefinition Height="Auto" />
			<RowDefinition Height="*" />
		</Grid.RowDefinitions>
		<Label Grid.Row="0" Margin="5" Padding="10,2,0,2" Content="Server Type:" VerticalContentAlignment="Center" HorizontalContentAlignment="Left" HorizontalAlignment="Left" Width="90" />
		<Data:TypeEditor OpenType="{Binding Path=OpenType}" x:Name="ServerTypeEditor" SupportInheritedTypes="True" SupportKnownTypes="True" Grid.Row="0" Margin="100,0,0,0" />
		<ToggleButton Grid.Row="1" Margin="5" IsChecked="{Binding Path=OpenType.HasClientType}" Content="Client Type:" VerticalContentAlignment="Center" HorizontalContentAlignment="Left" HorizontalAlignment="Left" Width="90" />
		<Data:TypeEditor OpenType="{Binding Path=OpenType.ClientType}" x:Name="ClientTypeEditor" SupportInheritedTypes="True" SupportKnownTypes="True" Grid.Row="1" Margin="100,0,0,0" />
		<ToggleButton Grid.Row="2" Margin="5" IsChecked="{Binding Path=OpenType.HasXAMLType}" Content="XAML Type:" VerticalContentAlignment="Center" HorizontalContentAlignment="Left" HorizontalAlignment="Left" Width="90" />
		<Data:TypeEditor OpenType="{Binding Path=OpenType.XAMLType}" x:Name="XAMLTypeEditor" CanSetType="False" SupportInheritedTypes="True" Grid.Row="2" Margin="100,0,0,0" />
		<Docs:Class x:Name="Docs" Grid.Row="3" Margin="0,5" Documentation="{Binding Path=OpenType.Documentation}" />
		<Label Grid.Row="4" Content="Members" FontSize="14pt" Margin="0,10,0,0" />
		<Label Grid.Row="5" Margin="-4,5,0,5" Padding="8,2,0,2" Content="Add Member:" VerticalContentAlignment="Center" HorizontalContentAlignment="Left" HorizontalAlignment="Left" Width="100" />
		<Data:TypeSelector Project="{Binding OpenType}" x:Name="AddMemberType" LabelText="Type" Grid.Row="5" Margin="105,5,0,5" HorizontalAlignment="Left" Width="375" Selected="AddMemberType_Selected" ValidationChanged="AddMemberType_ValidationChanged" />
		<pc:TextBox x:Name="AddMemberName" LabelText="Name" Grid.Row="5" Margin="490,5,105,5" Validate="AddMemberName_Validate" TextChanged="AddMemberName_TextChanged" KeyUp="AddMemberName_KeyUp" />
		<Button x:Name="AddMember" Grid.Row="5" Margin="5" Content="Add" HorizontalAlignment="Right" Width="90" IsEnabled="False" Click="AddMember_Click" />
		<Grid Grid.Row="6" Margin="0,5,0,0">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="230"/>
				<ColumnDefinition Width="*" />
			</Grid.ColumnDefinitions>
			<Grid.RowDefinitions>
				<RowDefinition Height="*" />
			</Grid.RowDefinitions>
			<ListBox x:Name="ValuesList" ItemsSource="{Binding Path=OpenType.Elements}" AllowDrop="True" BorderThickness="0" Background="Transparent" Margin="0" SelectionMode="Single" Padding="-1,0" ItemContainerStyle="{StaticResource StretchedContainerStyle}" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Visible" VirtualizingStackPanel.IsVirtualizing="False" SelectionChanged="ValuesList_SelectionChanged" PreviewMouseLeftButtonDown="ValuesList_PreviewMouseLeftButtonDown" PreviewMouseMove="ValuesList_PreviewMouseMove" QueryContinueDrag="ValuesList_QueryContinueDrag" DragLeave="ValuesList_DragLeave" PreviewDragOver="ValuesList_PreviewDragOver" PreviewDrop="ValuesList_Drop" >
				<ListBox.ItemTemplate>
					<DataTemplate DataType="{x:Type Projects:DataElement}">
						<Grid Name="ItemGrid" >
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="Auto" />
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
							</Grid.RowDefinitions>
							<Border x:Name="ItemBG" Grid.ColumnSpan="2" Background="Transparent" CornerRadius="5" />
							<StackPanel Orientation="Vertical" Margin="3">
								<StackPanel Orientation="Horizontal">
									<Image x:Name="Icon" Source="pack://application:,,,/WCFArchitect;component/Icons/X16/Property.png" Width="16" Height="16" Stretch="None" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0,0,4,0" />
									<TextBlock Text="{Binding Path=DataName}" Foreground="{StaticResource DefaultFontColor}" FontFamily="{StaticResource DefaultFontFamily}" FontSize="11pt" />
								</StackPanel>
								<TextBlock Foreground="{StaticResource DefaultFontColor}" FontFamily="{StaticResource DefaultFontFamily}" FontSize="10pt" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" Margin="20,0,0,0" >
									<TextBlock.Text>
										<MultiBinding StringFormat="Server: {0} {1} {2}">
											<Binding Path="DataScope" Converter="{StaticResource DataScopeNameConverter}" ConverterParameter='True' />
											<Binding Path="DataType.TypeName" />
											<Binding Path="DataName" />
										</MultiBinding>
									</TextBlock.Text>
								</TextBlock>
								<TextBlock Visibility="{Binding Path=HasClientType, Converter={StaticResource BoolVisibilityConverter}}" Foreground="{StaticResource DefaultFontColor}" FontFamily="{StaticResource DefaultFontFamily}" FontSize="10pt" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" Margin="20,0,0,0" >
									<TextBlock.Text>
										<MultiBinding StringFormat="Client: {0} {1} {2}">
											<Binding Path="ClientScope" Converter="{StaticResource DataScopeNameConverter}" ConverterParameter='True' />
											<Binding Path="ClientType.TypeName" />
											<Binding Path="ClientName" />
										</MultiBinding>
									</TextBlock.Text>
								</TextBlock>
								<TextBlock Visibility="{Binding Path=HasXAMLType, Converter={StaticResource BoolVisibilityConverter}}" Foreground="{StaticResource DefaultFontColor}" FontFamily="{StaticResource DefaultFontFamily}" FontSize="10pt" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" Margin="20,0,0,0" >
									<TextBlock.Text>
										<MultiBinding StringFormat="XAML: {0} {1} {2}">
											<Binding Path="XAMLScope" Converter="{StaticResource DataScopeNameConverter}" ConverterParameter='True' />
											<Binding Path="XAMLType.TypeName" />
											<Binding Path="XAMLName" />
										</MultiBinding>
									</TextBlock.Text>
								</TextBlock>
							</StackPanel>
							<Button Grid.Column="1" x:Name="DeleteElement" Visibility="Collapsed" Margin="0" Padding="0" Width="30" Style="{StaticResource ListItemButtonRight}" Click="DeleteElement_Click">
								<Image Source="pack://application:,,,/WCFArchitect;component/Icons/X16/Delete.png" HorizontalAlignment="Center" VerticalAlignment="Center" UseLayoutRounding="True" Height="16" Width="16" Stretch="Uniform"/>
							</Button>
						</Grid>
						<DataTemplate.Triggers>
							<MultiDataTrigger>
								<MultiDataTrigger.Conditions>
									<Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListBoxItem}},Path=IsMouseOver}" Value="True" />
									<Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListBoxItem}},Path=IsSelected}" Value="False" />
								</MultiDataTrigger.Conditions>
								<Setter TargetName="ItemBG" Property="Background" Value="{StaticResource MouseOverBackgroundColor}" />
							</MultiDataTrigger>
							<DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListBoxItem}},Path=IsMouseOver}" Value="True" >
								<Setter TargetName="DeleteElement" Property="Visibility" Value="Visible" />
							</DataTrigger>
							<DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListBoxItem}},Path=IsSelected}" Value="True" >
								<Setter TargetName="ItemBG" Property="Background" Value="{StaticResource DefaultSelectionColor}" />
							</DataTrigger>
						</DataTemplate.Triggers>
					</DataTemplate>
				</ListBox.ItemTemplate>
			</ListBox>
			<ContentPresenter Grid.Column="1" Content="{Binding Path=ActiveElement}" />
		</Grid>
	</Grid>
</ContentControl>