<ContentControl x:Class="NETPath.Interface.Data.Data" x:ClassModifier="internal"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008" mc:Ignorable="d" 
	xmlns:sf="http://schemas.syncfusion.com/wpf"
	xmlns:Data="clr-namespace:NETPath.Interface.Data"
	xmlns:Projects="clr-namespace:NETPath.Projects;assembly=NETPath.Projects"
	xmlns:Docs="clr-namespace:NETPath.Interface.Documentation"
	xmlns:pc="http://schemas.propsectivesoftware.com/pc"
	d:DesignHeight="950" d:DesignWidth="1000" DataContext="{Binding RelativeSource={RelativeSource Self}}" FontSize="10pt" >
	<ContentControl.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="pack://application:,,,/NETPath;component/Themes/Colors.xaml" />
				<ResourceDictionary>
					<pc:BoolVisibilityConverter x:Key="BoolVisibilityConverter" />
				</ResourceDictionary>
			</ResourceDictionary.MergedDictionaries>
		</ResourceDictionary>
	</ContentControl.Resources>
	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" />
			<RowDefinition Height="Auto" />
			<RowDefinition Height="Auto" />
			<RowDefinition Height="Auto" />
			<RowDefinition Height="Auto" />
			<RowDefinition Height="Auto" />
			<RowDefinition Height="*" />
		</Grid.RowDefinitions>
		<Label Grid.Row="0" Margin="5" Padding="10,2,0,2" Content="Server Type:" VerticalContentAlignment="Center" HorizontalContentAlignment="Left" HorizontalAlignment="Left" Width="90" />
		<Data:TypeEditor OpenType="{Binding Path=OpenType}" x:Name="ServerTypeEditor" SupportInheritedTypes="True" SupportKnownTypes="True" Grid.Row="0" Margin="100,0,0,0" />
		<ToggleButton Grid.Row="1" Margin="5" IsChecked="{Binding Path=OpenType.HasClientType}" Content="Client Type:" VerticalContentAlignment="Center" HorizontalContentAlignment="Left" HorizontalAlignment="Left" Width="90" />
		<Data:TypeEditor OpenType="{Binding Path=OpenType.ClientType}" x:Name="ClientTypeEditor" SupportInheritedTypes="True" SupportKnownTypes="True" Grid.Row="1" Margin="100,0,0,0" />
		<ToggleButton Grid.Row="2" Margin="5" IsChecked="{Binding Path=OpenType.HasXAMLType}" Content="XAML Type:" VerticalContentAlignment="Center" HorizontalContentAlignment="Left" HorizontalAlignment="Left" Width="90" />
		<Data:TypeEditor OpenType="{Binding Path=OpenType.XAMLType}" x:Name="XAMLTypeEditor" CanSetType="False" SupportInheritedTypes="True" Grid.Row="2" Margin="100,0,0,0" />
		<ToggleButton Grid.Row="3" Width="90" Margin="5" IsChecked="{Binding Path=OpenType.HasEntity}" IsEnabled="{Binding Path=OpenType.DREEnabled}"  Content="Entity Type:" VerticalContentAlignment="Center" HorizontalContentAlignment="Left" HorizontalAlignment="Left" />
		<pc:TextBox Text="{Binding Path=OpenType.EntityName, UpdateSourceTrigger=PropertyChanged}" x:Name="EntityName" Grid.Row="3" Margin="100,5,5,5" IsEnabled="{Binding Path=OpenType.HasEntity}" LabelText="Entity Type Name" />
		<Grid Grid.Row="4" Margin="0,5,0,0" >
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*" />
				<ColumnDefinition Width="*" />
				<ColumnDefinition Width="*" />
			</Grid.ColumnDefinitions>
			<ToggleButton Content="Enable Concurrently Mutable Data" IsChecked="{Binding Path=OpenType.CMDEnabled}" Margin="5" Grid.Column="0" Grid.Row="0" />
			<ToggleButton Content="Enable Data Revision Exchange" IsChecked="{Binding Path=OpenType.DREEnabled}" IsEnabled="{Binding Path=OpenType.CMDEnabled}" Margin="5" Grid.Column="1" Grid.Row="0" />
			<Label Content="Revision Batch Size:" Height="Auto" HorizontalAlignment="Left" Margin="0" VerticalContentAlignment="Center" Width="Auto" Grid.Column="2" />
			<sf:IntegerTextBox Value="{Binding Path=OpenType.DREBatchCount}" IsEnabled="{Binding Path=OpenType.DREEnabled}" Margin="125,5,5,5" VerticalContentAlignment="Center" HorizontalContentAlignment="Left" Name="UpdateBatchSize" Grid.Column="2" FontSize="10pt" ToolTip="Specify the number of changes to the this object before a change message is sent." />
		</Grid>
		<Grid Name="OptionsGrid" Grid.Row="5" Margin="0,5,0,0" >
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*" />
				<ColumnDefinition Width="*" />
				<ColumnDefinition Width="*" />
				<ColumnDefinition Width="*" />
			</Grid.ColumnDefinitions>
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto" />
			</Grid.RowDefinitions>
			<ToggleButton Grid.Column="0" Grid.Row="1" Content="Use Protocol Buffers" Margin="5" Padding="2,0" Height="23" IsChecked="{Binding Path=OpenType.EnableProtocolBuffers}" ToolTip="Determines if the type is marked as a protocol buffer contract." />
			<ToggleButton Grid.Column="1" Grid.Row="1" Content="Skip Constructor" Margin="5" Padding="2,0" Height="23" IsChecked="{Binding Path=OpenType.ProtoSkipConstructor}" IsEnabled="{Binding Path=OpenType.EnableProtocolBuffers}" ToolTip="Supress the constuctor during deserialization." />
			<ToggleButton Grid.Column="2" Grid.Row="1" Content="Use Protocol Members Only" Margin="5" Padding="2,0" Height="23" IsChecked="{Binding Path=OpenType.ProtoMembersOnly}" IsEnabled="{Binding Path=OpenType.EnableProtocolBuffers}" ToolTip="If the contract is marked with multiple attributes, use only members explicitly marked for protocol buffers." />
			<ToggleButton Grid.Column="3" Grid.Row="1" Content="Ignore List Handling" Margin="5" Padding="2,0" Height="23" IsChecked="{Binding Path=OpenType.ProtoIgnoreListHandling}" IsEnabled="{Binding Path=OpenType.EnableProtocolBuffers}" ToolTip="Use instance rules, list interfaces are ignored." />
		</Grid>
		<TabControl Grid.Row="6" Margin="0,10,0,0">
			<TabItem IsSelected="True">
				<TabItem.Header>
					<TextBlock Text="Members" FontSize="12pt"/>
				</TabItem.Header>
				<Grid>
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto" />
						<RowDefinition Height="*" />
					</Grid.RowDefinitions>
					<Label Grid.Row="0" Margin="0,5" Padding="6,2,0,2" Content="Add Member:" VerticalContentAlignment="Center" HorizontalContentAlignment="Left" HorizontalAlignment="Left" Width="100" />
					<Data:TypeSelector Project="{Binding OpenType}" x:Name="AddMemberType" LabelText="Type" Grid.Row="0" Margin="105,5,0,5" HorizontalAlignment="Left" Width="375" ValidationChanged="AddMemberType_ValidationChanged" />
					<pc:TextBox x:Name="AddMemberName" LabelText="Name" Grid.Row="0" Margin="490,5,105,5" Validate="AddMemberName_Validate" TextChanged="AddMemberName_TextChanged" KeyUp="AddMemberName_KeyUp" />
					<Button x:Name="AddMember" Grid.Row="0" Margin="5" Content="Add" HorizontalAlignment="Right" Width="90" IsEnabled="False" Click="AddMember_Click" />
					<Grid Grid.Row="1" Margin="0,5,0,0">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="230"/>
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="*" />
						</Grid.RowDefinitions>
						<ListBox x:Name="ValuesList" ItemsSource="{Binding Path=OpenType.Elements}" AllowDrop="True" BorderThickness="0" Background="Transparent" Margin="0" SelectionMode="Single" Padding="-1,0" ItemContainerStyle="{StaticResource StretchedContainerStyle}" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Visible" VirtualizingStackPanel.IsVirtualizing="False" SelectionChanged="ValuesList_SelectionChanged" PreviewMouseLeftButtonDown="ValuesList_PreviewMouseLeftButtonDown" PreviewMouseMove="ValuesList_PreviewMouseMove" QueryContinueDrag="ValuesList_QueryContinueDrag" DragLeave="ValuesList_DragLeave" PreviewDragOver="ValuesList_PreviewDragOver" PreviewDrop="ValuesList_Drop" >
							<ListBox.ItemTemplate>
								<DataTemplate DataType="{x:Type Projects:DataElement}">
									<Grid Name="ItemGrid" >
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="*" />
											<ColumnDefinition Width="Auto" />
										</Grid.ColumnDefinitions>
										<Grid.RowDefinitions>
											<RowDefinition Height="Auto" />
										</Grid.RowDefinitions>
										<Border x:Name="ItemBG" Grid.ColumnSpan="2" Background="Transparent" CornerRadius="5" />
										<StackPanel Orientation="Vertical" Margin="3">
											<StackPanel Orientation="Horizontal">
												<Image x:Name="Icon" Source="pack://application:,,,/NETPath;component/Icons/X16/Property.png" Width="16" Height="16" Stretch="None" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0,0,4,0" />
												<TextBlock Text="{Binding Path=DataName}" Foreground="{StaticResource DefaultFontColor}" FontFamily="{StaticResource DefaultFontFamily}" FontSize="11pt" />
											</StackPanel>
											<TextBlock Foreground="{StaticResource ReadOnlyFontColor}" FontFamily="{StaticResource DefaultFontFamily}" FontSize="10pt" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" Margin="20,0,0,0" >
												<TextBlock.Text>
													<MultiBinding StringFormat="Type: {0}">
														<Binding Path="DataType.TypeName" />
													</MultiBinding>
												</TextBlock.Text>
											</TextBlock>
											<TextBlock Visibility="{Binding Path=HasContractName, Converter={StaticResource BoolVisibilityConverter}}" Foreground="{StaticResource ReadOnlyFontColor}" FontFamily="{StaticResource DefaultFontFamily}" FontSize="10pt" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" Margin="20,0,0,0" >
												<TextBlock.Text>
													<MultiBinding StringFormat="Contract: {0}">
														<Binding Path="ContractName" />
													</MultiBinding>
												</TextBlock.Text>
											</TextBlock>
											<TextBlock Visibility="{Binding Path=HasClientType, Converter={StaticResource BoolVisibilityConverter}}" Foreground="{StaticResource ReadOnlyFontColor}" FontFamily="{StaticResource DefaultFontFamily}" FontSize="10pt" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" Margin="20,0,0,0" >
												<TextBlock.Text>
													<MultiBinding StringFormat="Client: {0}">
														<Binding Path="ClientName" />
													</MultiBinding>
												</TextBlock.Text>
											</TextBlock>
											<TextBlock Visibility="{Binding Path=HasXAMLType, Converter={StaticResource BoolVisibilityConverter}}" Foreground="{StaticResource ReadOnlyFontColor}" FontFamily="{StaticResource DefaultFontFamily}" FontSize="10pt" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" Margin="20,0,0,0" >
												<TextBlock.Text>
													<MultiBinding StringFormat="XAML: {0}">
														<Binding Path="XAMLName" />
													</MultiBinding>
												</TextBlock.Text>
											</TextBlock>
										</StackPanel>
										<Button Grid.Column="1" x:Name="DeleteElement" Visibility="Collapsed" Margin="0" Padding="0" Width="30" Style="{StaticResource ListItemButtonRight}" Click="DeleteElement_Click">
											<Image Source="pack://application:,,,/NETPath;component/Icons/X16/Delete.png" HorizontalAlignment="Center" VerticalAlignment="Center" UseLayoutRounding="True" Height="16" Width="16" Stretch="Uniform"/>
										</Button>
									</Grid>
									<DataTemplate.Triggers>
										<MultiDataTrigger>
											<MultiDataTrigger.Conditions>
												<Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListBoxItem}},Path=IsMouseOver}" Value="True" />
												<Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListBoxItem}},Path=IsSelected}" Value="False" />
											</MultiDataTrigger.Conditions>
											<Setter TargetName="ItemBG" Property="Background" Value="{StaticResource MouseOverBackgroundColor}" />
										</MultiDataTrigger>
										<DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListBoxItem}},Path=IsMouseOver}" Value="True" >
											<Setter TargetName="DeleteElement" Property="Visibility" Value="Visible" />
										</DataTrigger>
										<DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListBoxItem}},Path=IsSelected}" Value="True" >
											<Setter TargetName="ItemBG" Property="Background" Value="{StaticResource DefaultSelectionColor}" />
										</DataTrigger>
									</DataTemplate.Triggers>
								</DataTemplate>
							</ListBox.ItemTemplate>
						</ListBox>
						<ContentPresenter Grid.Column="1" Content="{Binding Path=ActiveElement}" Margin="5,0" />
					</Grid>
				</Grid>
			</TabItem>
			<TabItem>
				<TabItem.Header>
					<TextBlock Text="Documentation" FontSize="12pt"/>
				</TabItem.Header>
				<Docs:Class x:Name="Docs" Margin="5" Documentation="{Binding Path=OpenType.Documentation}" />
			</TabItem>
		</TabControl>
	</Grid>
</ContentControl>