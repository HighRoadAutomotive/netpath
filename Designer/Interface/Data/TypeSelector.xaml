<ContentControl x:Class="NETPath.Interface.Data.TypeSelector" x:ClassModifier="internal"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
	xmlns:pc="http://schemas.propsectivesoftware.com/pc"
	xmlns:Projects="clr-namespace:NETPath.Projects;assembly=NETPath.Projects" 
	xmlns:Data="clr-namespace:NETPath.Interface.Data"
	MinHeight="24" MinWidth="100"
    mc:Ignorable="d" d:DesignHeight="24" d:DesignWidth="300"
	UseLayoutRounding="True"
	Foreground="{StaticResource DefaultFontColor}" FontFamily="{StaticResource DefaultFontFamily}" FontSize="{StaticResource DefaultFontSize}"
	LostFocus="ContentControl_LostFocus" GotFocus="ContentControl_GotFocus">
	<ContentControl.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="pack://application:,,,/Prospective.Controls;component/Themes/Generic.xaml" />
			</ResourceDictionary.MergedDictionaries>
			<Data:DataTypeModeConverter x:Key="DataTypeModeConverter" />
		</ResourceDictionary>
	</ContentControl.Resources>
	<Grid Name="BG">
		<pc:TextBox x:Name="TypeName" Text="{Binding Path=OpenType, Mode=OneWay, TargetNullValue=''}" LabelText="{Binding Path=LabelText}" IsEnabled="{Binding IsEnabled}" TextChanged="TypeName_TextChanged" KeyDown="TypeName_KeyDown" KeyUp="TypeName_KeyUp" />
		<Popup PlacementTarget="{Binding ElementName=BG}" x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" HorizontalAlignment="Stretch" IsOpen="{Binding HasResults}" Margin="0" MaxHeight="200" MinWidth="250" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom" UseLayoutRounding="{Binding UseLayoutRounding}" >
			<Border x:Name="DropDownBorder" Width="{Binding ActualWidth}" BorderThickness="0" Background="{Binding Background}" HorizontalAlignment="Stretch" UseLayoutRounding="{Binding UseLayoutRounding}">
				<ListBox x:Name="TypesList" ItemsSource="{Binding Path=Results}" Padding="0" BorderThickness="0" BorderBrush="Transparent" Background="{StaticResource ItemSelectorBackgroundColor}" ItemContainerStyle="{StaticResource StretchedContainerStyle}" VirtualizingPanel.IsVirtualizing="False" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Auto" KeyUp="TypesList_KeyUp" MouseUp="TypesList_MouseUp" >
					<ListBox.Resources>
						<SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#00FFFFFF"/>
					</ListBox.Resources>
					<ListBox.ItemTemplate>
						<DataTemplate DataType="{x:Type Projects:DataType}">
							<Border Name="BG" Background="Transparent" BorderBrush="Transparent" BorderThickness="0" CornerRadius="0" Padding="2">
								<StackPanel Orientation="Horizontal">
									<Image Source="{Binding Converter={StaticResource DataTypeModeConverter}}" HorizontalAlignment="Center" VerticalAlignment="Center" UseLayoutRounding="True" Height="16" Width="16" Stretch="Uniform"/>
									<TextBlock Name="DataTypeName" Text="{Binding Path=Name}" Grid.Column="0" Margin="3,0,0,0" VerticalAlignment="Center" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" Foreground="{StaticResource DefaultFontColor}" FontFamily="{StaticResource DefaultFontFamily}" FontSize="{StaticResource DefaultFontSize}" />
								</StackPanel>
							</Border>
							<DataTemplate.Triggers>
								<DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListBoxItem}},Path=IsMouseOver}" Value="True">
									<Setter TargetName="BG" Property="Background" Value="{StaticResource MouseOverBackgroundColor}" />
								</DataTrigger>
								<DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListBoxItem}},Path=IsSelected}" Value="True">
									<Setter TargetName="BG" Property="Background" Value="{StaticResource DefaultSelectionColor}" />
								</DataTrigger>
							</DataTemplate.Triggers>
						</DataTemplate>
					</ListBox.ItemTemplate>
				</ListBox>
			</Border>
		</Popup>
	</Grid>
</ContentControl>