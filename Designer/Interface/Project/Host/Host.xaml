<Grid x:Class="WCFArchitect.Interface.Project.Host.Host" x:ClassModifier="internal"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008" mc:Ignorable="d" 
	xmlns:c1="http://schemas.componentone.com/wpf/Basic"
	xmlns:c1datetime="http://schemas.componentone.com/wpf/DateTimeEditors"
	xmlns:c1ext="http://schemas.componentone.com/wpf/C1Extended"
	xmlns:pc="clr-namespace:Prospective.Controls;assembly=Prospective.Controls"
	xmlns:Host="clr-namespace:WCFArchitect.Interface.Project.Host"
	xmlns:InRoot="clr-namespace:WCFArchitect.Interface"
	d:DesignHeight="750" d:DesignWidth="750" DataContext="{Binding RelativeSource={RelativeSource Self}}" >
	<Grid.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="pack://application:,,,/WCFArchitect;component/Themes/Colors.xaml" />
				<ResourceDictionary Source="pack://application:,,,/WCFArchitect;component/Themes/Generic.xaml" />
				<ResourceDictionary>
					<Host:PrincipalPermissionModeConverter x:Key="PrincipalPermissionModeConverter" />
					<Host:X509CertificateValidationModeConverter x:Key="X509CertificateValidationModeConverter" />
					<Host:X509RevocationModeConverter x:Key="X509RevocationModeConverter" />
					<Host:StoreLocationConverter x:Key="StoreLocationConverter" />
					<Host:UserNamePasswordValidationModeConverter x:Key="UserNamePasswordValidationModeConverter" />
					<Host:HostBehaviorTypeImageConverter x:Key="HostBehaviorTypeImageConverter" />
					<InRoot:ProjectTypeVisibilityConverter x:Key="ProjectTypeVisibilityConverter" />
					<InRoot:ProjectTypeEnabledConverter x:Key="ProjectTypeEnabledConverter" />
					<InRoot:ProjectTypeReadOnlyConverter x:Key="ProjectTypeReadOnlyConverter" />
				</ResourceDictionary>
			</ResourceDictionary.MergedDictionaries>
		</ResourceDictionary>
	</Grid.Resources>
	<Grid.RowDefinitions>
		<RowDefinition Height="Auto" />
		<RowDefinition Height="*" />
	</Grid.RowDefinitions>
	<Border BorderBrush="#CCCCCC" BorderThickness="0,0,0,1" Padding="0,0,0,5" Margin="0,0,0,5" Grid.Row="0">
		<StackPanel Orientation="Horizontal">
			<Image Source="pack://application:,,,/WCFArchitect;component/Icons/X32/Host.png" UseLayoutRounding="True" Height="32" Width="32" Stretch="Uniform" Margin="5,0"/>
			<TextBlock Text="{Binding Path=Data.Name}" Foreground="#555555" FontSize="18" Height="Auto" VerticalAlignment="Center" />
			<TextBlock Text=" - Host" Foreground="#555555" FontSize="18" Height="Auto" VerticalAlignment="Center" />
		</StackPanel>
	</Border>
	<Grid Grid.Row="1">
		<Grid.RowDefinitions>
			<RowDefinition Height="35" />
			<RowDefinition Height="60" />
			<RowDefinition Height="155" />
			<RowDefinition Height="*"/>
		</Grid.RowDefinitions>
		<Grid Grid.Row="0">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*"/>
				<ColumnDefinition Width="*"/>
				<ColumnDefinition Width="*"/>
			</Grid.ColumnDefinitions>
			<Label Content="Display Name:" Height="Auto" HorizontalAlignment="Left" Margin="5,6,0,0" VerticalAlignment="Top" />
			<pc:TextBox Text="{Binding Path=Data.Name}" Name="DisplayName"  Height="23" Margin="97,7,5,0" VerticalAlignment="Top" IsReadOnly="{Binding Path=Data, Converter={StaticResource ProjectTypeReadOnlyConverter}}" ToolTip="{Binding Path=Data.Name}" />
			<Label Content="Code Name:" Height="Auto" HorizontalAlignment="Left" Margin="5,6,0,0" VerticalAlignment="Top" Grid.Column="1" />
			<pc:TextBox Text="{Binding Path=Data.CodeName}" Name="CodeName" Height="23" Margin="86,7,5,0" VerticalAlignment="Top" Grid.Column="1" IsReadOnly="{Binding Path=Data, Converter={StaticResource ProjectTypeReadOnlyConverter}}" TextChanged="CodeName_TextChanged" ToolTip="{Binding Path=Data.CodeName}" />
			<Label Content="Namespace:" Height="Auto" HorizontalAlignment="Left" Margin="5,6,0,0" VerticalAlignment="Top" Grid.Column="2" />
			<pc:TextBox Text="{Binding Path=Data.Namespace}" Name="Namespace" Height="23" Margin="85,7,5,0" VerticalAlignment="Top" Grid.Column="2" IsReadOnly="{Binding Path=Data, Converter={StaticResource ProjectTypeReadOnlyConverter}}" TextChanged="Namespace_TextChanged" Validate="Namespace_Validate" ToolTip="{Binding Path=Data.Namespace}" />
		</Grid>
		<Grid Grid.Row="1">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="385" />
				<ColumnDefinition Width="*" />
			</Grid.ColumnDefinitions>
			<GroupBox Header="Timeouts" Margin="5,0,0,0" Grid.Column="0">
				<Grid>
					<Label Content="Open Timeout:" Height="28" HorizontalAlignment="Left" Margin="5,5,0,0" VerticalAlignment="Top" />
					<c1datetime:C1TimeEditor Value="{Binding Path=Data.OpenTimeout, Mode=TwoWay}" Name="OpenTimeout" HorizontalAlignment="Left" Margin="100,6,0,0" Format="TimeSpan" Height="24" VerticalAlignment="Top" Width="70" IsReadOnly="{Binding Path=Data, Converter={StaticResource ProjectTypeReadOnlyConverter}}" />
					<Label Content="Close Timeout:" Height="28" HorizontalAlignment="Left" Margin="185,5,0,0" VerticalAlignment="Top" />
					<c1datetime:C1TimeEditor Value="{Binding Path=Data.CloseTimeout, Mode=TwoWay}" Name="CloseTimeout" HorizontalAlignment="Left" Margin="291,6,0,0" Format="TimeSpan" Height="24" VerticalAlignment="Top" Width="70" IsReadOnly="{Binding Path=Data, Converter={StaticResource ProjectTypeReadOnlyConverter}}" />
				</Grid>
			</GroupBox>
			<GroupBox Header="Service" Margin="5,0" Grid.Column="1">
				<Grid>
					<Button Content="Select" Height="23" HorizontalAlignment="Right" Margin="0,6,6,0" Name="SelectService" VerticalAlignment="Top" Width="100" IsHitTestVisible="{Binding Path=Data, Converter={StaticResource ProjectTypeEnabledConverter}}" Click="SelectService_Click" />
					<Label Content="Service:" Height="Auto" HorizontalAlignment="Left" Margin="5,5,0,0" VerticalAlignment="Top" Width="Auto" />
					<TextBlock Height="Auto" Margin="66,5,112,0" Name="Service" Padding="5" Text="No Service Selected" TextTrimming="CharacterEllipsis" TextWrapping="NoWrap" VerticalAlignment="Top" />
				</Grid>
			</GroupBox>
		</Grid>
		<Grid Grid.Row="2">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*" />
				<ColumnDefinition Width="*" />
			</Grid.ColumnDefinitions>
			<GroupBox Header="Settings" Margin="5,5,2,0" Grid.Column="0">
				<Grid>
					<Label Content="Manual Flow Control Limit:" Height="Auto" HorizontalAlignment="Left" Margin="5,5,0,0" VerticalAlignment="Top" Width="Auto" />
					<c1:C1NumericBox HorizontalAlignment="Right" Margin="0,7,5,0" Value="{Binding Path=Data.ManualFlowControlLimit}" VerticalAlignment="Top" Width="75" ShowButtons="False" Name="ManualFlowControlLimit" IsReadOnly="{Binding Path=Data, Converter={StaticResource ProjectTypeReadOnlyConverter}}" ValueChanged="ManualFlowControlLimit_ValueChanged"  />
					<Label Content="Impersonate Caller for all Operations:" Margin="5,34,0,0" Height="Auto" VerticalAlignment="Top" HorizontalAlignment="Left" Width="Auto" />
					<ToggleButton IsChecked="{Binding Path=Data.AuthorizationImpersonateCallerForAllOperations}" Name="AuthorizationImpersonateCallerForAllOperations" Content="No" Margin="0,35,5,0" IsHitTestVisible="{Binding Path=Data, Converter={StaticResource ProjectTypeEnabledConverter}}" Checked="AuthorizationImpersonateCallerForAllOperations_Checked" Unchecked="AuthorizationImpersonateCallerForAllOperations_Unchecked" Height="23" VerticalAlignment="Top" HorizontalAlignment="Right" Width="75" />
					<Label Content="Principal Permission Mode:" Height="28" HorizontalAlignment="Left" Margin="5,65,0,0" VerticalAlignment="Top" />
					<ComboBox Height="23" Margin="185,66,5,0" VerticalAlignment="Top" SelectedIndex="{Binding Path=Data.AuthorizationPrincipalPermissionMode, Converter={StaticResource PrincipalPermissionModeConverter}}" IsHitTestVisible="{Binding Path=Data, Converter={StaticResource ProjectTypeEnabledConverter}}" >
						<ComboBox.Items>
							<ComboBoxItem Content="None" />
							<ComboBoxItem Content="Use Windows Groups" />
							<ComboBoxItem Content="Use ASP.NET Roles" />
							<ComboBoxItem Content="Custom" />
						</ComboBox.Items>
					</ComboBox>
					<Label Content="Configuration Name:" Height="28" HorizontalAlignment="Left" Margin="5,94,0,0" VerticalAlignment="Top" />
					<pc:TextBox Text="{Binding Path=Data.ConfigurationName}" Height="23" Margin="185,95,6,0" VerticalAlignment="Top" IsReadOnly="{Binding Path=Data, Converter={StaticResource ProjectTypeReadOnlyConverter}}" ToolTip="{Binding Path=Data.ConfigurationName}" />
				</Grid>
			</GroupBox>
		</Grid>
		<c1ext:C1Accordion Grid.Row="3" Margin="5" Fill="True" >
			<c1ext:C1AccordionItem IsExpanded="True">
				<c1ext:C1AccordionItem.Header>
					<StackPanel Orientation="Horizontal">
						<Image Source="pack://application:,,,/WCFArchitect;component/Icons/X32/Endpoint.png" UseLayoutRounding="True" Height="32" Width="32" Stretch="Uniform"/>
						<TextBlock FontSize="18" Padding="5,0,0,0" Text="Endpoints" Height="Auto" VerticalAlignment="Center" />
					</StackPanel>
				</c1ext:C1AccordionItem.Header>
				<Grid Margin="0,5,0,2">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="250" />
						<ColumnDefinition Width="*" />
					</Grid.ColumnDefinitions>
					<Border Margin="0,0,5,0" Grid.Column="0" >
						<Grid>
							<Grid.RowDefinitions>
								<RowDefinition Height="40" />
								<RowDefinition Height="*" />
							</Grid.RowDefinitions>
							<Border BorderBrush="#CCCCCC" BorderThickness="0,0,0,1" Padding="0,0,0,5" Margin="0,0,0,5" Grid.Row="0">
								<Grid>
									<Button HorizontalAlignment="Left" Margin="5,1,0,1" Name="AddEndpoint" Width="114" IsHitTestVisible="{Binding Path=Data, Converter={StaticResource ProjectTypeEnabledConverter}}" Click="AddEndpoint_Click" >
										<StackPanel Orientation="Horizontal">
											<Image Source="pack://application:,,,/WCFArchitect;component/Icons/X16/Add.png" UseLayoutRounding="True" Height="16" Width="16" Stretch="Uniform"/>
											<TextBlock FontSize="12" Padding="3,0,0,0" Text="New Endpoint" Height="Auto" VerticalAlignment="Center" />
										</StackPanel>
									</Button>
									<Button HorizontalAlignment="Right" Margin="0,1,5,1" Name="DeleteEndpoint" Width="114" IsHitTestVisible="{Binding Path=Data, Converter={StaticResource ProjectTypeEnabledConverter}}" Click="DeleteEndpoint_Click" >
										<StackPanel Orientation="Horizontal">
											<Image Source="pack://application:,,,/WCFArchitect;component/Icons/X16/Delete.png" UseLayoutRounding="True" Height="16" Width="16" Stretch="Uniform"/>
											<TextBlock FontSize="12" Padding="3,0,0,0" Text="Delete Endpoint" Height="Auto" VerticalAlignment="Center" />
										</StackPanel>
									</Button>
								</Grid>
							</Border>
							<ListBox x:Name="EndpointList" Grid.Row="1" SelectionMode="Single" ItemContainerStyle="{StaticResource StretchedContainerStyle}" SelectionChanged="EndpointList_SelectionChanged" BorderThickness="0">
								<ListBox.Resources>
									<SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#00FFFFFF"/>
								</ListBox.Resources>
								<ListBox.ItemTemplate>
									<DataTemplate>
										<Border Name="BG" Background="Transparent" BorderBrush="Transparent" BorderThickness="1" CornerRadius="0">
											<Grid>
												<Grid.ColumnDefinitions>
													<ColumnDefinition Width="40" />
													<ColumnDefinition Width="*" />
												</Grid.ColumnDefinitions>
												<Grid.RowDefinitions>
													<RowDefinition Height="40" />
												</Grid.RowDefinitions>
												<Image Source="pack://application:,,,/WCFArchitect;component/Icons/X32/Endpoint.png" HorizontalAlignment="Center" VerticalAlignment="Center" UseLayoutRounding="True" Height="32" Width="32" Stretch="Uniform" Grid.Column="0"/>
												<TextBlock Text="{Binding Path=Name}" Grid.Column="1" VerticalAlignment="Center" Foreground="Black" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis"/>
											</Grid>
										</Border>
										<DataTemplate.Triggers>
											<DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListBoxItem}},Path=IsMouseOver}" Value="True">
												<Setter TargetName="BG" Property="Background" Value="{StaticResource ItemHoverBackground}" />
												<Setter TargetName="BG" Property="BorderBrush" Value="{StaticResource ItemHoverBorder}" />
											</DataTrigger>
											<DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListBoxItem}},Path=IsSelected}" Value="True">
												<Setter TargetName="BG" Property="Background" Value="{StaticResource ItemSelectedBackground}" />
												<Setter TargetName="BG" Property="BorderBrush" Value="{StaticResource ItemHoverBorder}" />
											</DataTrigger>
										</DataTemplate.Triggers>
									</DataTemplate>
								</ListBox.ItemTemplate>
							</ListBox>
						</Grid>
					</Border>
					<Border Grid.Column="1" BorderBrush="#CCCCCC" BorderThickness="1,0,0,0" Margin="0" Padding="5,0,0,0">
						<Grid>
							<TextBlock Name="EndpointContentEmpty" Text="Please select an endpoint from the list on the left, or create a new one." FontSize="16" FontStyle="Italic" Foreground="DarkGray" HorizontalAlignment="Center" VerticalAlignment="Center" TextWrapping="Wrap" />
							<ContentPresenter Name="EndpointContent" />
						</Grid>
					</Border>
				</Grid>
			</c1ext:C1AccordionItem>
			<c1ext:C1AccordionItem>
				<c1ext:C1AccordionItem.Header>
					<StackPanel Orientation="Horizontal">
						<Image Source="pack://application:,,,/WCFArchitect;component/Icons/X32/Behavior.png" UseLayoutRounding="True" Height="32" Width="32" Stretch="Uniform"/>
						<TextBlock FontSize="18" Padding="5,0,0,0" Text="Behaviors" Height="Auto" VerticalAlignment="Center" />
					</StackPanel>
				</c1ext:C1AccordionItem.Header>
				<Grid Margin="0,5,0,2">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="250" />
						<ColumnDefinition Width="*" />
					</Grid.ColumnDefinitions>
					<Border Margin="0,0,5,0" Grid.Column="0" >
						<Grid>
							<Grid.RowDefinitions>
								<RowDefinition Height="40" />
								<RowDefinition Height="*" />
							</Grid.RowDefinitions>
							<Border BorderBrush="#CCCCCC" BorderThickness="0,0,0,1" Padding="0,0,0,5" Margin="0,0,0,5" Grid.Row="0">
								<Grid>
									<Button HorizontalAlignment="Left" Margin="5,1,0,1" Name="AddBehavior" Width="114" IsHitTestVisible="{Binding Path=Data, Converter={StaticResource ProjectTypeEnabledConverter}}" Click="AddBehavior_Click" >
										<StackPanel Orientation="Horizontal">
											<Image Source="pack://application:,,,/WCFArchitect;component/Icons/X16/Add.png" UseLayoutRounding="True" Height="16" Width="16" Stretch="Uniform"/>
											<TextBlock FontSize="12" Padding="3,0,0,0" Text="New Behavior" Height="Auto" VerticalAlignment="Center" />
										</StackPanel>
									</Button>
									<Button HorizontalAlignment="Right" Margin="0,1,5,1" Name="DeleteBehavior" Width="114" IsHitTestVisible="{Binding Path=Data, Converter={StaticResource ProjectTypeEnabledConverter}}" Click="DeleteBehavior_Click" >
										<StackPanel Orientation="Horizontal">
											<Image Source="pack://application:,,,/WCFArchitect;component/Icons/X16/Delete.png" UseLayoutRounding="True" Height="16" Width="16" Stretch="Uniform"/>
											<TextBlock FontSize="12" Padding="3,0,0,0" Text="Delete Behavior" Height="Auto" VerticalAlignment="Center" />
										</StackPanel>
									</Button>
								</Grid>
							</Border>
							<ListBox x:Name="BehaviorList" Grid.Row="1" SelectionMode="Single" ItemContainerStyle="{StaticResource StretchedContainerStyle}" SelectionChanged="BehaviorList_SelectionChanged" BorderThickness="0">
								<ListBox.Resources>
									<SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#00FFFFFF"/>
								</ListBox.Resources>
								<ListBox.ItemTemplate>
									<DataTemplate>
										<Border Name="BG" Background="Transparent" BorderBrush="Transparent" BorderThickness="1" CornerRadius="0">
											<Grid>
												<Grid.ColumnDefinitions>
													<ColumnDefinition Width="40" />
													<ColumnDefinition Width="*" />
												</Grid.ColumnDefinitions>
												<Grid.RowDefinitions>
													<RowDefinition Height="40" />
												</Grid.RowDefinitions>
												<Image Source="{Binding Converter={StaticResource HostBehaviorTypeImageConverter}}" HorizontalAlignment="Center" VerticalAlignment="Center" UseLayoutRounding="True" Height="32" Width="32" Stretch="Uniform" Grid.Column="0"/>
												<TextBlock Text="{Binding Path=Name}" Grid.Column="1" VerticalAlignment="Center" Foreground="Black" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis"/>
											</Grid>
										</Border>
										<DataTemplate.Triggers>
											<DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListBoxItem}},Path=IsMouseOver}" Value="True">
												<Setter TargetName="BG" Property="Background" Value="{StaticResource ItemHoverBackground}" />
												<Setter TargetName="BG" Property="BorderBrush" Value="{StaticResource ItemHoverBorder}" />
											</DataTrigger>
											<DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListBoxItem}},Path=IsSelected}" Value="True">
												<Setter TargetName="BG" Property="Background" Value="{StaticResource ItemSelectedBackground}" />
												<Setter TargetName="BG" Property="BorderBrush" Value="{StaticResource ItemHoverBorder}" />
											</DataTrigger>
										</DataTemplate.Triggers>
									</DataTemplate>
								</ListBox.ItemTemplate>
							</ListBox>
						</Grid>
					</Border>
					<Border Grid.Column="1" BorderBrush="#CCCCCC" BorderThickness="1,0,0,0" Margin="0" Padding="5,0,0,0">
						<Grid>
							<TextBlock Name="BehaviorContentEmpty" Text="Please select a behavior from the list on the left, or create a new one." FontSize="16" FontStyle="Italic" Foreground="DarkGray" HorizontalAlignment="Center" VerticalAlignment="Center" TextWrapping="Wrap" />
							<ContentPresenter Name="BehaviorContent" />
						</Grid>
					</Border>
				</Grid>
			</c1ext:C1AccordionItem>
			<c1ext:C1AccordionItem>
				<c1ext:C1AccordionItem.Header>
					<StackPanel Orientation="Horizontal">
						<Image Source="pack://application:,,,/WCFArchitect;component/Icons/X32/BindingSecurity.png" UseLayoutRounding="True" Height="32" Width="32" Stretch="Uniform"/>
						<TextBlock FontSize="18" Padding="5,0,0,0" Text="Security" Height="Auto" VerticalAlignment="Center" />
					</StackPanel>
				</c1ext:C1AccordionItem.Header>
				<Grid DataContext="{Binding Path=Data.Credentials}" Margin="0,5,0,0" >
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="*" />
						<ColumnDefinition Width="*" />
						<ColumnDefinition Width="*" />
					</Grid.ColumnDefinitions>
					<Grid.RowDefinitions>
						<RowDefinition Height="175"/>
						<RowDefinition Height="155"/>
						<RowDefinition Height="*"/>
					</Grid.RowDefinitions>
					<GroupBox Grid.Column="0" Grid.Row="0" Header="Certificate" Margin="0,0,5,0">
						<Grid>
							<Label Content="Include Windows Groups:" Height="Auto" HorizontalAlignment="Left" Margin="5,6,0,0" VerticalAlignment="Top" Width="Auto" />
							<ToggleButton Content="No" Height="23" IsChecked="{Binding Path=ClientCertificateAuthenticationIncludeWindowsGroups}" Margin="158,7,5,0" Name="ClientCertificateAuthenticationIncludeWindowsGroups" VerticalAlignment="Top" IsHitTestVisible="{Binding Path=Data, Converter={StaticResource ProjectTypeEnabledConverter}}" Checked="ClientCertificateAuthenticationIncludeWindowsGroups_Checked" Unchecked="ClientCertificateAuthenticationIncludeWindowsGroups_Unchecked"  />
							<Label Content="Map to Windows Account:" Height="Auto" HorizontalAlignment="Left" Margin="5,35,0,0" VerticalAlignment="Top" Width="Auto" />
							<ToggleButton Content="No" Height="23" IsChecked="{Binding Path=ClientCertificateAuthenticationMapClientCertificateToWindowsAccount}" Margin="158,36,5,0" Name="ClientCertificateAuthenticationMapClientCertificateToWindowsAccount" VerticalAlignment="Top" IsHitTestVisible="{Binding Path=Data, Converter={StaticResource ProjectTypeEnabledConverter}}" Checked="ClientCertificateAuthenticationMapClientCertificateToWindowsAccount_Checked" Unchecked="ClientCertificateAuthenticationMapClientCertificateToWindowsAccount_Unchecked" />
							<Label Content="Validation Mode:" Height="28" HorizontalAlignment="Left" Margin="5,65,0,0" VerticalAlignment="Top" />
							<ComboBox Height="23" Margin="117,66,5,0" SelectedIndex="{Binding Path=ClientCertificateAuthenticationValidationMode, Converter={StaticResource X509CertificateValidationModeConverter}}" VerticalAlignment="Top" IsHitTestVisible="{Binding Path=Data, Converter={StaticResource ProjectTypeEnabledConverter}}" >
								<ComboBoxItem Content="None" />
								<ComboBoxItem Content="Peer Trust" />
								<ComboBoxItem Content="Chain Trust" />
								<ComboBoxItem Content="Peer or Chain Trust" />
								<ComboBoxItem Content="Custom" />
							</ComboBox>
							<Label Content="Revocation Mode:" Height="28" HorizontalAlignment="Left" Margin="5,94,0,0" VerticalAlignment="Top" />
							<ComboBox Height="23" Margin="117,95,5,0" SelectedIndex="{Binding Path=ClientCertificateAuthenticationRevocationMode, Converter={StaticResource X509RevocationModeConverter}}" VerticalAlignment="Top" IsHitTestVisible="{Binding Path=Data, Converter={StaticResource ProjectTypeEnabledConverter}}" >
								<ComboBoxItem Content="No Check" />
								<ComboBoxItem Content="Online" />
								<ComboBoxItem Content="Offline" />
							</ComboBox>
							<Label Content="Store Location:" Height="28" HorizontalAlignment="Left" Margin="5,123,0,0" VerticalAlignment="Top" />
							<ComboBox Height="23" Margin="117,124,5,0" SelectedIndex="{Binding Path=ClientCertificateAuthenticationStoreLocation, Converter={StaticResource StoreLocationConverter}}" VerticalAlignment="Top" IsHitTestVisible="{Binding Path=Data, Converter={StaticResource ProjectTypeEnabledConverter}}" >
								<ComboBoxItem Content="Current User" />
								<ComboBoxItem Content="Local Machine" />
							</ComboBox>
						</Grid>
					</GroupBox>
					<GroupBox Grid.Column="0" Grid.Row="1" Header="Issued Token" Margin="0,5,5,0">
						<Grid>
							<Label Content="Allow Untrusted Issuers:" Height="Auto" HorizontalAlignment="Left" Margin="5,6,0,0" VerticalAlignment="Top" Width="Auto" />
							<ToggleButton Content="No" Height="23" IsChecked="{Binding Path=IssuedTokenAllowUntrustedRsaIssuers}" Margin="158,7,5,0" Name="IssuedTokenAllowUntrustedRsaIssuers" VerticalAlignment="Top" IsHitTestVisible="{Binding Path=Data, Converter={StaticResource ProjectTypeEnabledConverter}}" Checked="IssuedTokenAllowUntrustedRsaIssuers_Checked" Unchecked="IssuedTokenAllowUntrustedRsaIssuers_Unchecked" />
							<Label Content="Validation Mode:" Height="28" HorizontalAlignment="Left" Margin="5,36,0,0" VerticalAlignment="Top" />
							<ComboBox Height="23" Margin="117,37,5,0" SelectedIndex="{Binding Path=IssuedTokenCertificateValidationMode, Converter={StaticResource X509CertificateValidationModeConverter}}" VerticalAlignment="Top" IsHitTestVisible="{Binding Path=Data, Converter={StaticResource ProjectTypeEnabledConverter}}" >
								<ComboBoxItem Content="None" />
								<ComboBoxItem Content="Peer Trust" />
								<ComboBoxItem Content="Chain Trust" />
								<ComboBoxItem Content="Peer or Chain Trust" />
								<ComboBoxItem Content="Custom" />
							</ComboBox>
							<Label Content="Revocation Mode:" Height="28" HorizontalAlignment="Left" Margin="5,65,0,0" VerticalAlignment="Top" />
							<ComboBox Height="23" Margin="117,66,5,0" SelectedIndex="{Binding Path=IssuedTokenRevocationMode, Converter={StaticResource X509RevocationModeConverter}}" VerticalAlignment="Top" IsHitTestVisible="{Binding Path=Data, Converter={StaticResource ProjectTypeEnabledConverter}}" >
								<ComboBoxItem Content="No Check" />
								<ComboBoxItem Content="Online" />
								<ComboBoxItem Content="Offline" />
							</ComboBox>
							<Label Content="Store Location:" Height="28" HorizontalAlignment="Left" Margin="5,94,0,0" VerticalAlignment="Top" />
							<ComboBox Height="23" Margin="117,95,5,0" SelectedIndex="{Binding Path=IssuedTokenTrustedStoreLocation, Converter={StaticResource StoreLocationConverter}}" VerticalAlignment="Top" IsHitTestVisible="{Binding Path=Data, Converter={StaticResource ProjectTypeEnabledConverter}}" >
								<ComboBoxItem Content="Current User" />
								<ComboBoxItem Content="Local Machine" />
							</ComboBox>
						</Grid>
					</GroupBox>
					<GroupBox Grid.Column="1" Grid.Row="0" Grid.RowSpan="2" Header="Peer" Margin="0">
						<Grid>
							<Label Content="Mesh Password:" Height="Auto" HorizontalAlignment="Left" Margin="5,6,0,0" VerticalAlignment="Top" Width="Auto" />
							<pc:TextBox Text="{Binding Path=PeerMeshPassword}" Height="23" Margin="117,7,5,0" VerticalAlignment="Top" IsReadOnly="{Binding Path=Data, Converter={StaticResource ProjectTypeReadOnlyConverter}}" />
							<Label Content="Sender Validation:" Height="28" HorizontalAlignment="Left" Margin="5,36,0,0" VerticalAlignment="Top" />
							<ComboBox Height="23" Margin="117,37,5,0" SelectedIndex="{Binding Path=PeerMessageSenderAuthenticationCertificateValidationMode, Converter={StaticResource X509CertificateValidationModeConverter}}" VerticalAlignment="Top" IsHitTestVisible="{Binding Path=Data, Converter={StaticResource ProjectTypeEnabledConverter}}" >
								<ComboBoxItem Content="None" />
								<ComboBoxItem Content="Peer Trust" />
								<ComboBoxItem Content="Chain Trust" />
								<ComboBoxItem Content="Peer or Chain Trust" />
								<ComboBoxItem Content="Custom" />
							</ComboBox>
							<Label Content="Sender Revocation:" Height="28" HorizontalAlignment="Left" Margin="5,65,0,0" VerticalAlignment="Top" />
							<ComboBox Height="23" Margin="117,66,5,0" SelectedIndex="{Binding Path=PeerMessageSenderAuthenticationRevocationMode, Converter={StaticResource X509RevocationModeConverter}}" VerticalAlignment="Top" IsHitTestVisible="{Binding Path=Data, Converter={StaticResource ProjectTypeEnabledConverter}}" >
								<ComboBoxItem Content="No Check" />
								<ComboBoxItem Content="Online" />
								<ComboBoxItem Content="Offline" />
							</ComboBox>
							<Label Content="Sender Store:" Height="28" HorizontalAlignment="Left" Margin="5,94,0,0" VerticalAlignment="Top" />
							<ComboBox Height="23" Margin="117,95,5,0" SelectedIndex="{Binding Path=PeerMessageSenderAuthenticationTrustedStoreLocation, Converter={StaticResource StoreLocationConverter}}" VerticalAlignment="Top" IsHitTestVisible="{Binding Path=Data, Converter={StaticResource ProjectTypeEnabledConverter}}" >
								<ComboBoxItem Content="Current User" />
								<ComboBoxItem Content="Local Machine" />
							</ComboBox>
							<Label Content="Peer Validation:" Height="28" HorizontalAlignment="Left" Margin="5,123,0,0" VerticalAlignment="Top" />
							<ComboBox Height="23" Margin="117,124,5,0" SelectedIndex="{Binding Path=PeerAuthenticationCertificateValidationMode, Converter={StaticResource X509CertificateValidationModeConverter}}" VerticalAlignment="Top" IsHitTestVisible="{Binding Path=Data, Converter={StaticResource ProjectTypeEnabledConverter}}" >
								<ComboBoxItem Content="None" />
								<ComboBoxItem Content="Peer Trust" />
								<ComboBoxItem Content="Chain Trust" />
								<ComboBoxItem Content="Peer or Chain Trust" />
								<ComboBoxItem Content="Custom" />
							</ComboBox>
							<Label Content="Peer Revocation:" Height="28" HorizontalAlignment="Left" Margin="5,152,0,0" VerticalAlignment="Top" />
							<ComboBox Height="23" Margin="117,153,5,0" SelectedIndex="{Binding Path=PeerAuthenticationRevocationMode, Converter={StaticResource X509RevocationModeConverter}}" VerticalAlignment="Top" IsHitTestVisible="{Binding Path=Data, Converter={StaticResource ProjectTypeEnabledConverter}}" >
								<ComboBoxItem Content="No Check" />
								<ComboBoxItem Content="Online" />
								<ComboBoxItem Content="Offline" />
							</ComboBox>
							<Label Content="Peer Store:" Height="28" HorizontalAlignment="Left" Margin="5,181,0,0" VerticalAlignment="Top" />
							<ComboBox Height="23" Margin="117,182,5,0" SelectedIndex="{Binding Path=PeerAuthenticationTrustedStoreLocation, Converter={StaticResource StoreLocationConverter}}" VerticalAlignment="Top" IsHitTestVisible="{Binding Path=Data, Converter={StaticResource ProjectTypeEnabledConverter}}" >
								<ComboBoxItem Content="Current User" />
								<ComboBoxItem Content="Local Machine" />
							</ComboBox>
						</Grid>
					</GroupBox>
					<GroupBox Grid.Column="2" Grid.Row="0" Header="Username/Password" Margin="5,0,0,0">
						<Grid>
							<Label Content="Include Windows Groups:" Height="Auto" HorizontalAlignment="Left" Margin="5,6,0,0" VerticalAlignment="Top" Width="Auto" />
							<ToggleButton Content="No" Height="23" IsChecked="{Binding Path=UserNamePasswordCacheLogonTokens}" Margin="153,7,5,0" Name="UserNamePasswordCacheLogonTokens" VerticalAlignment="Top" IsHitTestVisible="{Binding Path=Data, Converter={StaticResource ProjectTypeEnabledConverter}}" Checked="UserNamePasswordCacheLogonTokens_Checked" Unchecked="UserNamePasswordCacheLogonTokens_Unchecked"  />
							<Label Content="Cached Token Lifetime:" Height="28" HorizontalAlignment="Left" Margin="5,64,0,0" VerticalAlignment="Top" />
							<c1datetime:C1TimeEditor Format="TimeSpan" Height="24" Margin="153,65,5,0" Value="{Binding Path=UserNamePasswordCachedLogonTokenLifetime, Mode=TwoWay}" Name="UserNamePasswordCachedLogonTokenLifetime" VerticalAlignment="Top" IsReadOnly="{Binding Path=Data, Converter={StaticResource ProjectTypeReadOnlyConverter}}" />
							<Label Content="Cache Logon Tokens:" Height="Auto" HorizontalAlignment="Left" Margin="5,35,0,0" VerticalAlignment="Top" Width="Auto" />
							<ToggleButton Content="No" Height="23" IsChecked="{Binding Path=UserNamePasswordIncludeWindowsGroups}" Margin="153,36,5,0" Name="UserNamePasswordIncludeWindowsGroups" VerticalAlignment="Top" IsHitTestVisible="{Binding Path=Data, Converter={StaticResource ProjectTypeEnabledConverter}}" Checked="UserNamePasswordIncludeWindowsGroups_Checked" Unchecked="UserNamePasswordIncludeWindowsGroups_Unchecked" />
							<Label Content="Max Cached Logon Tokens:" Height="Auto" HorizontalAlignment="Left" Margin="5,92,0,0" VerticalAlignment="Top" Width="Auto" />
							<c1:C1NumericBox Margin="163,94,5,0" Value="{Binding Path=UserNamePasswordMaxCachedLogonTokens}" VerticalAlignment="Top" ShowButtons="False" Name="UserNamePasswordMaxCachedLogonTokens" IsReadOnly="{Binding Path=Data, Converter={StaticResource ProjectTypeReadOnlyConverter}}" ValueChanged="UserNamePasswordMaxCachedLogonTokens_ValueChanged" />
							<Label Content="Validation Mode:" Height="28" HorizontalAlignment="Left" Margin="5,121,0,0" VerticalAlignment="Top" />
							<ComboBox Height="23" Margin="117,122,5,0" SelectedIndex="{Binding Path=UserNamePasswordValidationMode, Converter={StaticResource UserNamePasswordValidationModeConverter}}" VerticalAlignment="Top" IsHitTestVisible="{Binding Path=Data, Converter={StaticResource ProjectTypeEnabledConverter}}" >
								<ComboBoxItem Content="None" />
								<ComboBoxItem Content="Peer Trust" />
								<ComboBoxItem Content="Chain Trust" />
								<ComboBoxItem Content="Peer or Chain Trust" />
								<ComboBoxItem Content="Custom" />
							</ComboBox>
						</Grid>
					</GroupBox>
					<GroupBox Grid.Column="2" Grid.Row="1" Header="Windows Service" Margin="5,5,0,0">
						<Grid>
							<Label Content="Allow Anonymous Logon:" Height="Auto" HorizontalAlignment="Left" Margin="5,5,0,0" VerticalAlignment="Top" Width="Auto" />
							<ToggleButton Content="No" Height="23" IsChecked="{Binding Path=WindowsServiceIncludeWindowsGroups}" Margin="158,6,5,0" Name="WindowsServiceIncludeWindowsGroups" VerticalAlignment="Top" IsHitTestVisible="{Binding Path=Data, Converter={StaticResource ProjectTypeEnabledConverter}}" Checked="WindowsServiceIncludeWindowsGroups_Checked" Unchecked="WindowsServiceIncludeWindowsGroups_Unchecked" />
							<Label Content="Include Windows Groups:" Height="Auto" HorizontalAlignment="Left" Margin="5,34,0,0" VerticalAlignment="Top" Width="Auto" />
							<ToggleButton Content="No" Height="23" IsChecked="{Binding Path=WindowsServiceAllowAnonymousLogons}" Margin="158,35,5,0" Name="WindowsServiceAllowAnonymousLogons" VerticalAlignment="Top" IsHitTestVisible="{Binding Path=Data, Converter={StaticResource ProjectTypeEnabledConverter}}" Checked="WindowsServiceAllowAnonymousLogons_Checked" Unchecked="WindowsServiceAllowAnonymousLogons_Unchecked"  />
						</Grid>
					</GroupBox>
				</Grid>
			</c1ext:C1AccordionItem>
		</c1ext:C1Accordion>
	</Grid>
</Grid>